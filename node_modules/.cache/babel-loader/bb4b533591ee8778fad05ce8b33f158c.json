{"ast":null,"code":"var _jsxFileName = \"D:\\\\Like, for real projects\\\\React-Todo-List-V2\\\\src\\\\components\\\\ToDo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDo = _ref => {\n  _s();\n  let {\n    toDo,\n    markDone,\n    setUpdateData,\n    deleteTask,\n    updateTask\n  } = _ref;\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [editedTitle, setEditedTitle] = useState('');\n  const [editedDetails, setEditedDetails] = useState('');\n  const handleEditTask = taskId => {\n    updateTask(taskId, {\n      title: editedTitle,\n      details: editedDetails\n    });\n    setEditingTaskId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: toDo && toDo.sort((a, b) => a.id > b.id ? 1 : -1).map((task, index) => {\n      const createdAt = new Date(task.createdAt).toLocaleString();\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col taskBg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: task.status ? 'done' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskNumber\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 19\n            }, this), editingTaskId === task.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editedTitle,\n              onChange: e => setEditedTitle(e.target.value),\n              placeholder: \"Edit task title...\",\n              style: {\n                color: '#000',\n                backgroundColor: '#fff'\n              } // Inline styles for readability\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskText\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskTime\",\n              children: createdAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `taskPriority ${task.priority}`,\n              children: task.priority\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"iconsWrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Completed / Not Completed\",\n              onClick: () => markDone(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCircleCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Edit\",\n              onClick: () => {\n                setEditingTaskId(task.id);\n                setEditedTitle(task.title);\n                setEditedDetails(task.details || '');\n              },\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Delete\",\n              onClick: () => deleteTask(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrashCan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detailsSection\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Details:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 22\n              }, this), \" \", task.details || 'No details provided.']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), editingTaskId === task.id && /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: editedDetails,\n              onChange: e => setEditedDetails(e.target.value),\n              rows: 3,\n              placeholder: \"Edit task details...\",\n              style: {\n                color: '#000',\n                backgroundColor: '#fff'\n              } // Inline styles for readability\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this), editingTaskId === task.id && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEditTask(task.id),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setEditingTaskId(null),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false);\n};\n_s(ToDo, \"ChqWsB6vIS0N0+X/S/nF+Yb0qUY=\");\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faCircleCheck","faPen","faTrashCan","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDo","_ref","_s","toDo","markDone","setUpdateData","deleteTask","updateTask","editingTaskId","setEditingTaskId","editedTitle","setEditedTitle","editedDetails","setEditedDetails","handleEditTask","taskId","title","details","children","sort","a","b","id","map","task","index","createdAt","Date","toLocaleString","className","status","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","style","color","backgroundColor","priority","onClick","icon","rows","_c","$RefreshReg$"],"sources":["D:/Like, for real projects/React-Todo-List-V2/src/components/ToDo.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faCircleCheck, faPen, faTrashCan\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ToDo = ({ toDo, markDone, setUpdateData, deleteTask, updateTask }) => {\r\n  const [editingTaskId, setEditingTaskId] = useState(null);\r\n  const [editedTitle, setEditedTitle] = useState('');\r\n  const [editedDetails, setEditedDetails] = useState('');\r\n\r\n  const handleEditTask = (taskId) => {\r\n    updateTask(taskId, { title: editedTitle, details: editedDetails });\r\n    setEditingTaskId(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {toDo && toDo\r\n        .sort((a, b) => a.id > b.id ? 1 : -1)\r\n        .map((task, index) => {\r\n          const createdAt = new Date(task.createdAt).toLocaleString();\r\n\r\n          return (\r\n            <React.Fragment key={task.id}>\r\n              <div className=\"col taskBg\">\r\n                <div className={task.status ? 'done' : ''}>\r\n                  <span className=\"taskNumber\">{index + 1}</span>\r\n                  {editingTaskId === task.id ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      value={editedTitle}\r\n                      onChange={(e) => setEditedTitle(e.target.value)}\r\n                      placeholder=\"Edit task title...\"\r\n                      style={{ color: '#000', backgroundColor: '#fff' }} // Inline styles for readability\r\n                    />\r\n                  ) : (\r\n                    <span className=\"taskText\">{task.title}</span>\r\n                  )}\r\n                  <span className=\"taskTime\">{createdAt}</span>\r\n                  <span className={`taskPriority ${task.priority}`}>{task.priority}</span>\r\n                </div>\r\n                <div className=\"iconsWrap\">\r\n                  <span title=\"Completed / Not Completed\" onClick={() => markDone(task.id)}>\r\n                    <FontAwesomeIcon icon={faCircleCheck} />\r\n                  </span>\r\n                  <span title=\"Edit\" onClick={() => {\r\n                    setEditingTaskId(task.id);\r\n                    setEditedTitle(task.title);\r\n                    setEditedDetails(task.details || '');\r\n                  }}>\r\n                    <FontAwesomeIcon icon={faPen} />\r\n                  </span>\r\n                  <span title=\"Delete\" onClick={() => deleteTask(task.id)}>\r\n                    <FontAwesomeIcon icon={faTrashCan} />\r\n                  </span>\r\n                </div>\r\n                <div className=\"detailsSection\">\r\n                  <p><strong>Details:</strong> {task.details || 'No details provided.'}</p>\r\n                  {editingTaskId === task.id && (\r\n                    <textarea\r\n                      value={editedDetails}\r\n                      onChange={(e) => setEditedDetails(e.target.value)}\r\n                      rows={3}\r\n                      placeholder=\"Edit task details...\"\r\n                      style={{ color: '#000', backgroundColor: '#fff' }} // Inline styles for readability\r\n                    />\r\n                  )}\r\n                  {editingTaskId === task.id && (\r\n                    <div>\r\n                      <button onClick={() => handleEditTask(task.id)}>Save</button>\r\n                      <button onClick={() => setEditingTaskId(null)}>Cancel</button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        })\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ToDo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}