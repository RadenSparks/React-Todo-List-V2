{"ast":null,"code":"var _jsxFileName = \"D:\\\\Like, for real projects\\\\React-Todo-List-V2\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport AddTaskForm from './components/AddTaskForm.jsx';\nimport UpdateForm from './components/UpdateForm.jsx';\nimport ToDo from './components/ToDo.jsx';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Theme State\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    const savedMode = localStorage.getItem('isDarkMode');\n    return savedMode === 'true';\n  });\n\n  // Tasks (ToDo List) State\n  const [toDo, setToDo] = useState([{\n    id: 1,\n    title: 'Task 1',\n    status: false,\n    createdAt: new Date().toLocaleString(),\n    priority: 'low',\n    details: ''\n  }, {\n    id: 2,\n    title: 'Task 2',\n    status: false,\n    createdAt: new Date().toLocaleString(),\n    priority: 'medium',\n    details: ''\n  }]);\n\n  // Temp State\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState(null);\n\n  // Add task \n  const addTask = (priority, details) => {\n    if (newTask.trim()) {\n      // Validate input\n      const newId = toDo.length ? Math.max(toDo.map(task => task.id)) + 1 : 1;\n      setToDo([...toDo, {\n        id: newId,\n        title: newTask,\n        status: false,\n        createdAt: new Date().toLocaleString(),\n        priority,\n        details\n      }]);\n      setNewTask('');\n    }\n  };\n\n  // Delete task \n  const deleteTask = id => {\n    if (window.confirm(\"Are you sure you want to delete this task?\")) {\n      setToDo(toDo.filter(task => task.id !== id));\n    }\n  };\n\n  // Mark task as done or completed\n  const markDone = id => {\n    setToDo(toDo.map(task => task.id === id ? {\n      ...task,\n      status: !task.status\n    } : task));\n  };\n\n  // Cancel update\n  const cancelUpdate = () => {\n    setUpdateData(null);\n  };\n\n  // Change task for update\n  const handleUpdateChange = e => {\n    setUpdateData({\n      ...updateData,\n      title: e.target.value\n    });\n  };\n\n  // Update task\n  const updateTask = (taskId, updatedData) => {\n    const updatedTasks = toDo.map(task => task.id === taskId ? {\n      ...task,\n      ...updatedData\n    } : task);\n    setToDo(updatedTasks);\n    setUpdateData(null);\n  };\n\n  // Toggle Theme\n  const toggleTheme = () => {\n    const newMode = !isDarkMode;\n    setIsDarkMode(newMode);\n    localStorage.setItem('isDarkMode', newMode); // Save preference in local storage\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `container App ${isDarkMode ? 'dark-mode' : 'light-mode'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To Do List App (ReactJS)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleTheme,\n      className: \"btn btn-secondary\",\n      \"aria-label\": `Switch to ${isDarkMode ? 'Light' : 'Dark'} Mode`,\n      children: [\"Toggle to \", isDarkMode ? 'Light' : 'Dark', \" Mode\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), updateData ? /*#__PURE__*/_jsxDEV(UpdateForm, {\n      updateData: updateData,\n      changeHolder: handleUpdateChange,\n      updateTask: updateTask,\n      cancelUpdate: cancelUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      newTask: newTask,\n      setNewTask: setNewTask,\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), toDo.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(ToDo, {\n      toDo: toDo,\n      markDone: markDone,\n      setUpdateData: setUpdateData,\n      deleteTask: deleteTask,\n      updateTask: updateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3Dyf+cb+BO5oT/DjxZiljSNT6Uk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","AddTaskForm","UpdateForm","ToDo","React","jsxDEV","_jsxDEV","App","_s","isDarkMode","setIsDarkMode","savedMode","localStorage","getItem","toDo","setToDo","id","title","status","createdAt","Date","toLocaleString","priority","details","newTask","setNewTask","updateData","setUpdateData","addTask","trim","newId","length","Math","max","map","task","deleteTask","window","confirm","filter","markDone","cancelUpdate","handleUpdateChange","e","target","value","updateTask","taskId","updatedData","updatedTasks","toggleTheme","newMode","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","changeHolder","_c","$RefreshReg$"],"sources":["D:/Like, for real projects/React-Todo-List-V2/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport AddTaskForm from './components/AddTaskForm.jsx';\r\nimport UpdateForm from './components/UpdateForm.jsx';\r\nimport ToDo from './components/ToDo.jsx';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport React from \"react\";\r\n\r\nfunction App() {\r\n  // Theme State\r\n  const [isDarkMode, setIsDarkMode] = useState(() => {\r\n    const savedMode = localStorage.getItem('isDarkMode');\r\n    return savedMode === 'true';\r\n  });\r\n\r\n  // Tasks (ToDo List) State\r\n  const [toDo, setToDo] = useState([\r\n    { id: 1, title: 'Task 1', status: false, createdAt: new Date().toLocaleString(), priority: 'low', details: '' },\r\n    { id: 2, title: 'Task 2', status: false, createdAt: new Date().toLocaleString(), priority: 'medium', details: '' }\r\n  ]);\r\n\r\n  // Temp State\r\n  const [newTask, setNewTask] = useState('');\r\n  const [updateData, setUpdateData] = useState(null);\r\n\r\n  // Add task \r\n  const addTask = (priority, details) => {\r\n    if (newTask.trim()) { // Validate input\r\n      const newId = toDo.length ? Math.max(toDo.map(task => task.id)) + 1 : 1;\r\n\r\n      setToDo([\r\n        ...toDo,\r\n        { id: newId, title: newTask, status: false, createdAt: new Date().toLocaleString(), priority, details }\r\n      ]);\r\n\r\n      setNewTask('');\r\n    }\r\n  };\r\n\r\n  // Delete task \r\n  const deleteTask = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this task?\")) {\r\n      setToDo(toDo.filter(task => task.id !== id));\r\n    }\r\n  };\r\n\r\n  // Mark task as done or completed\r\n  const markDone = (id) => {\r\n    setToDo(toDo.map(task => \r\n      task.id === id ? { ...task, status: !task.status } : task\r\n    ));\r\n  };\r\n\r\n  // Cancel update\r\n  const cancelUpdate = () => {\r\n    setUpdateData(null);\r\n  };\r\n\r\n  // Change task for update\r\n  const handleUpdateChange = (e) => {\r\n    setUpdateData({ ...updateData, title: e.target.value });\r\n  };\r\n\r\n  // Update task\r\n  const updateTask = (taskId, updatedData) => {\r\n    const updatedTasks = toDo.map(task => \r\n      task.id === taskId ? { ...task, ...updatedData } : task\r\n    );\r\n\r\n    setToDo(updatedTasks);\r\n    setUpdateData(null);\r\n  };\r\n\r\n  // Toggle Theme\r\n  const toggleTheme = () => {\r\n    const newMode = !isDarkMode;\r\n    setIsDarkMode(newMode);\r\n    localStorage.setItem('isDarkMode', newMode); // Save preference in local storage\r\n  };\r\n\r\n  return (\r\n    <div className={`container App ${isDarkMode ? 'dark-mode' : 'light-mode'}`}>\r\n      <br /><br />\r\n      <h2>To Do List App (ReactJS)</h2>\r\n      <button onClick={toggleTheme} className=\"btn btn-secondary\" aria-label={`Switch to ${isDarkMode ? 'Light' : 'Dark'} Mode`}>\r\n        Toggle to {isDarkMode ? 'Light' : 'Dark'} Mode\r\n      </button>\r\n      <br /><br />\r\n\r\n      {updateData ? (\r\n        <UpdateForm\r\n          updateData={updateData}\r\n          changeHolder={handleUpdateChange}\r\n          updateTask={updateTask}\r\n          cancelUpdate={cancelUpdate}\r\n        />\r\n      ) : (\r\n        <AddTaskForm\r\n          newTask={newTask}\r\n          setNewTask={setNewTask}\r\n          addTask={addTask}\r\n        />\r\n      )}\r\n\r\n      {toDo.length === 0 && <p>No Tasks...</p>}\r\n\r\n      <ToDo\r\n        toDo={toDo}\r\n        markDone={markDone}\r\n        setUpdateData={setUpdateData}\r\n        deleteTask={deleteTask}\r\n        updateTask={updateTask}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}