{"ast":null,"code":"var _jsxFileName = \"D:\\\\Like, for real projects\\\\React-Todo-List-V2\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { ChakraProvider, Box, Button, Heading, Text, extendTheme } from '@chakra-ui/react';\nimport AddTaskForm from './components/AddTaskForm.jsx';\nimport UpdateForm from './components/UpdateForm.jsx';\nimport ToDo from './components/ToDo.jsx';\n\n// Create a theme that supports light and dark modes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = extendTheme({\n  config: {\n    initialColorMode: 'light',\n    useSystemColorMode: false\n  }\n});\nfunction App() {\n  _s();\n  // Theme State\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    const savedMode = localStorage.getItem('isDarkMode');\n    return savedMode === 'true';\n  });\n\n  // Tasks (ToDo List) State\n  const [toDo, setToDo] = useState([{\n    id: 1,\n    title: 'Task 1',\n    status: false,\n    createdAt: new Date().toLocaleString(),\n    priority: 'low',\n    details: '',\n    deadline: ''\n  }, {\n    id: 2,\n    title: 'Task 2',\n    status: false,\n    createdAt: new Date().toLocaleString(),\n    priority: 'medium',\n    details: '',\n    deadline: ''\n  }]);\n\n  // Temp State\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState(null);\n\n  // Add task \n  const addTask = (priority, details, deadline) => {\n    if (newTask.trim()) {\n      // Validate input\n      const newId = toDo.length ? Math.max(toDo.map(task => task.id)) + 1 : 1;\n      setToDo([...toDo, {\n        id: newId,\n        title: newTask,\n        status: false,\n        createdAt: new Date().toLocaleString(),\n        priority,\n        details,\n        deadline\n      }]);\n      setNewTask('');\n    }\n  };\n\n  // Delete task \n  const deleteTask = id => {\n    if (window.confirm(\"Are you sure you want to delete this task?\")) {\n      setToDo(toDo.filter(task => task.id !== id));\n    }\n  };\n\n  // Mark task as done or completed\n  const markDone = id => {\n    setToDo(toDo.map(task => task.id === id ? {\n      ...task,\n      status: !task.status\n    } : task));\n  };\n\n  // Cancel update\n  const cancelUpdate = () => {\n    setUpdateData(null);\n  };\n\n  // Change task for update\n  const handleUpdateChange = e => {\n    setUpdateData({\n      ...updateData,\n      title: e.target.value\n    });\n  };\n\n  // Update task\n  const updateTask = (taskId, updatedData) => {\n    const updatedTasks = toDo.map(task => task.id === taskId ? {\n      ...task,\n      ...updatedData\n    } : task);\n    setToDo(updatedTasks);\n    setUpdateData(null);\n  };\n\n  // Toggle Theme\n  const toggleTheme = () => {\n    const newMode = !isDarkMode;\n    setIsDarkMode(newMode);\n    localStorage.setItem('isDarkMode', newMode); // Save preference in local storage\n  };\n  useEffect(() => {\n    document.body.setAttribute('data-theme', isDarkMode ? 'dark' : 'light');\n  }, [isDarkMode]);\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: `App ${isDarkMode ? 'dark-mode' : 'light-mode'}`,\n      p: 5,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h2\",\n        size: \"lg\",\n        mb: 4,\n        children: \"To Do List App (ReactJS)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleTheme,\n        colorScheme: \"teal\",\n        mb: 4,\n        children: [\"Toggle to \", isDarkMode ? 'Light' : 'Dark', \" Mode\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), updateData ? /*#__PURE__*/_jsxDEV(UpdateForm, {\n        updateData: updateData,\n        changeHolder: handleUpdateChange,\n        updateTask: updateTask,\n        cancelUpdate: cancelUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(AddTaskForm, {\n        newTask: newTask,\n        setNewTask: setNewTask,\n        addTask: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), toDo.length === 0 ? /*#__PURE__*/_jsxDEV(Text, {\n        children: \"No Tasks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ToDo, {\n        toDo: toDo,\n        markDone: markDone,\n        setUpdateData: setUpdateData,\n        deleteTask: deleteTask,\n        updateTask: updateTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Jjqmd8jRVUuxOAjLeWUJFUJb3fI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","ChakraProvider","Box","Button","Heading","Text","extendTheme","AddTaskForm","UpdateForm","ToDo","jsxDEV","_jsxDEV","theme","config","initialColorMode","useSystemColorMode","App","_s","isDarkMode","setIsDarkMode","savedMode","localStorage","getItem","toDo","setToDo","id","title","status","createdAt","Date","toLocaleString","priority","details","deadline","newTask","setNewTask","updateData","setUpdateData","addTask","trim","newId","length","Math","max","map","task","deleteTask","window","confirm","filter","markDone","cancelUpdate","handleUpdateChange","e","target","value","updateTask","taskId","updatedData","updatedTasks","toggleTheme","newMode","setItem","document","body","setAttribute","children","className","p","as","size","mb","fileName","_jsxFileName","lineNumber","columnNumber","onClick","colorScheme","changeHolder","_c","$RefreshReg$"],"sources":["D:/Like, for real projects/React-Todo-List-V2/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { ChakraProvider, Box, Button, Heading, Text, extendTheme } from '@chakra-ui/react';\r\nimport AddTaskForm from './components/AddTaskForm.jsx';\r\nimport UpdateForm from './components/UpdateForm.jsx';\r\nimport ToDo from './components/ToDo.jsx';\r\n\r\n// Create a theme that supports light and dark modes\r\nconst theme = extendTheme({\r\n  config: {\r\n    initialColorMode: 'light',\r\n    useSystemColorMode: false,\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  // Theme State\r\n  const [isDarkMode, setIsDarkMode] = useState(() => {\r\n    const savedMode = localStorage.getItem('isDarkMode');\r\n    return savedMode === 'true';\r\n  });\r\n\r\n  // Tasks (ToDo List) State\r\n  const [toDo, setToDo] = useState([\r\n    { id: 1, title: 'Task 1', status: false, createdAt: new Date().toLocaleString(), priority: 'low', details: '', deadline: '' },\r\n    { id: 2, title: 'Task 2', status: false, createdAt: new Date().toLocaleString(), priority: 'medium', details: '', deadline: '' }\r\n  ]);\r\n\r\n  // Temp State\r\n  const [newTask, setNewTask] = useState('');\r\n  const [updateData, setUpdateData] = useState(null);\r\n\r\n  // Add task \r\n  const addTask = (priority, details, deadline) => {\r\n    if (newTask.trim()) { // Validate input\r\n      const newId = toDo.length ? Math.max(toDo.map(task => task.id)) + 1 : 1;\r\n\r\n      setToDo([\r\n        ...toDo,\r\n        { id: newId, title: newTask, status: false, createdAt: new Date().toLocaleString(), priority, details, deadline }\r\n      ]);\r\n\r\n      setNewTask('');\r\n    }\r\n  };\r\n\r\n  // Delete task \r\n  const deleteTask = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this task?\")) {\r\n      setToDo(toDo.filter(task => task.id !== id));\r\n    }\r\n  };\r\n\r\n  // Mark task as done or completed\r\n  const markDone = (id) => {\r\n    setToDo(toDo.map(task => \r\n      task.id === id ? { ...task, status: !task.status } : task\r\n    ));\r\n  };\r\n\r\n  // Cancel update\r\n  const cancelUpdate = () => {\r\n    setUpdateData(null);\r\n  };\r\n\r\n  // Change task for update\r\n  const handleUpdateChange = (e) => {\r\n    setUpdateData({ ...updateData, title: e.target.value });\r\n  };\r\n\r\n  // Update task\r\n  const updateTask = (taskId, updatedData) => {\r\n    const updatedTasks = toDo.map(task => \r\n      task.id === taskId ? { ...task, ...updatedData } : task\r\n    );\r\n\r\n    setToDo(updatedTasks);\r\n    setUpdateData(null);\r\n  };\r\n\r\n  // Toggle Theme\r\n  const toggleTheme = () => {\r\n    const newMode = !isDarkMode;\r\n    setIsDarkMode(newMode);\r\n    localStorage.setItem('isDarkMode', newMode); // Save preference in local storage\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.setAttribute('data-theme', isDarkMode ? 'dark' : 'light');\r\n  }, [isDarkMode]);\r\n\r\n  return (\r\n    <ChakraProvider theme={theme}>\r\n      <Box className={`App ${isDarkMode ? 'dark-mode' : 'light-mode'}`} p={5}>\r\n        <Heading as=\"h2\" size=\"lg\" mb={4}>To Do List App (ReactJS)</Heading>\r\n        <Button onClick={toggleTheme} colorScheme=\"teal\" mb={4}>\r\n          Toggle to {isDarkMode ? 'Light' : 'Dark'} Mode\r\n        </Button>\r\n\r\n        {updateData ? (\r\n          <UpdateForm\r\n            updateData={updateData}\r\n            changeHolder={handleUpdateChange}\r\n            updateTask={updateTask}\r\n            cancelUpdate={cancelUpdate}\r\n          />\r\n        ) : (\r\n          <AddTaskForm\r\n            newTask={newTask}\r\n            setNewTask={setNewTask}\r\n            addTask={addTask}\r\n          />\r\n        )}\r\n\r\n        {toDo.length === 0 ? (\r\n          <Text>No Tasks...</Text>\r\n        ) : (\r\n          <ToDo\r\n            toDo={toDo}\r\n            markDone={markDone}\r\n            setUpdateData={setUpdateData}\r\n            deleteTask={deleteTask}\r\n            updateTask={updateTask}\r\n          />\r\n        )}\r\n      </Box>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,cAAc,EAAEC,GAAG,EAAEC,MAAM,EAAEC,OAAO,EAAEC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAC1F,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,IAAI,MAAM,uBAAuB;;AAExC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAGN,WAAW,CAAC;EACxBO,MAAM,EAAE;IACNC,gBAAgB,EAAE,OAAO;IACzBC,kBAAkB,EAAE;EACtB;AACF,CAAC,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,MAAM;IACjD,MAAMqB,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACpD,OAAOF,SAAS,KAAK,MAAM;EAC7B,CAAC,CAAC;;EAEF;EACA,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGzB,QAAQ,CAAC,CAC/B;IAAE0B,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,QAAQ;IAAEC,MAAM,EAAE,KAAK;IAAEC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC;IAAEC,QAAQ,EAAE,KAAK;IAAEC,OAAO,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,EAC7H;IAAER,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,QAAQ;IAAEC,MAAM,EAAE,KAAK;IAAEC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC;IAAEC,QAAQ,EAAE,QAAQ;IAAEC,OAAO,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CACjI,CAAC;;EAEF;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACqC,UAAU,EAAEC,aAAa,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;;EAElD;EACA,MAAMuC,OAAO,GAAGA,CAACP,QAAQ,EAAEC,OAAO,EAAEC,QAAQ,KAAK;IAC/C,IAAIC,OAAO,CAACK,IAAI,CAAC,CAAC,EAAE;MAAE;MACpB,MAAMC,KAAK,GAAGjB,IAAI,CAACkB,MAAM,GAAGC,IAAI,CAACC,GAAG,CAACpB,IAAI,CAACqB,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACpB,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;MAEvED,OAAO,CAAC,CACN,GAAGD,IAAI,EACP;QAAEE,EAAE,EAAEe,KAAK;QAAEd,KAAK,EAAEQ,OAAO;QAAEP,MAAM,EAAE,KAAK;QAAEC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC;QAAEC,QAAQ;QAAEC,OAAO;QAAEC;MAAS,CAAC,CAClH,CAAC;MAEFE,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;;EAED;EACA,MAAMW,UAAU,GAAIrB,EAAE,IAAK;IACzB,IAAIsB,MAAM,CAACC,OAAO,CAAC,4CAA4C,CAAC,EAAE;MAChExB,OAAO,CAACD,IAAI,CAAC0B,MAAM,CAACJ,IAAI,IAAIA,IAAI,CAACpB,EAAE,KAAKA,EAAE,CAAC,CAAC;IAC9C;EACF,CAAC;;EAED;EACA,MAAMyB,QAAQ,GAAIzB,EAAE,IAAK;IACvBD,OAAO,CAACD,IAAI,CAACqB,GAAG,CAACC,IAAI,IACnBA,IAAI,CAACpB,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGoB,IAAI;MAAElB,MAAM,EAAE,CAACkB,IAAI,CAAClB;IAAO,CAAC,GAAGkB,IACvD,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzBd,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;;EAED;EACA,MAAMe,kBAAkB,GAAIC,CAAC,IAAK;IAChChB,aAAa,CAAC;MAAE,GAAGD,UAAU;MAAEV,KAAK,EAAE2B,CAAC,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;EACzD,CAAC;;EAED;EACA,MAAMC,UAAU,GAAGA,CAACC,MAAM,EAAEC,WAAW,KAAK;IAC1C,MAAMC,YAAY,GAAGpC,IAAI,CAACqB,GAAG,CAACC,IAAI,IAChCA,IAAI,CAACpB,EAAE,KAAKgC,MAAM,GAAG;MAAE,GAAGZ,IAAI;MAAE,GAAGa;IAAY,CAAC,GAAGb,IACrD,CAAC;IAEDrB,OAAO,CAACmC,YAAY,CAAC;IACrBtB,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;;EAED;EACA,MAAMuB,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,OAAO,GAAG,CAAC3C,UAAU;IAC3BC,aAAa,CAAC0C,OAAO,CAAC;IACtBxC,YAAY,CAACyC,OAAO,CAAC,YAAY,EAAED,OAAO,CAAC,CAAC,CAAC;EAC/C,CAAC;EAED7D,SAAS,CAAC,MAAM;IACd+D,QAAQ,CAACC,IAAI,CAACC,YAAY,CAAC,YAAY,EAAE/C,UAAU,GAAG,MAAM,GAAG,OAAO,CAAC;EACzE,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,oBACEP,OAAA,CAACV,cAAc;IAACW,KAAK,EAAEA,KAAM;IAAAsD,QAAA,eAC3BvD,OAAA,CAACT,GAAG;MAACiE,SAAS,EAAE,OAAOjD,UAAU,GAAG,WAAW,GAAG,YAAY,EAAG;MAACkD,CAAC,EAAE,CAAE;MAAAF,QAAA,gBACrEvD,OAAA,CAACP,OAAO;QAACiE,EAAE,EAAC,IAAI;QAACC,IAAI,EAAC,IAAI;QAACC,EAAE,EAAE,CAAE;QAAAL,QAAA,EAAC;MAAwB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACpEhE,OAAA,CAACR,MAAM;QAACyE,OAAO,EAAEhB,WAAY;QAACiB,WAAW,EAAC,MAAM;QAACN,EAAE,EAAE,CAAE;QAAAL,QAAA,GAAC,YAC5C,EAAChD,UAAU,GAAG,OAAO,GAAG,MAAM,EAAC,OAC3C;MAAA;QAAAsD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAERvC,UAAU,gBACTzB,OAAA,CAACH,UAAU;QACT4B,UAAU,EAAEA,UAAW;QACvB0C,YAAY,EAAE1B,kBAAmB;QACjCI,UAAU,EAAEA,UAAW;QACvBL,YAAY,EAAEA;MAAa;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,gBAEFhE,OAAA,CAACJ,WAAW;QACV2B,OAAO,EAAEA,OAAQ;QACjBC,UAAU,EAAEA,UAAW;QACvBG,OAAO,EAAEA;MAAQ;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CACF,EAEApD,IAAI,CAACkB,MAAM,KAAK,CAAC,gBAChB9B,OAAA,CAACN,IAAI;QAAA6D,QAAA,EAAC;MAAW;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,gBAExBhE,OAAA,CAACF,IAAI;QACHc,IAAI,EAAEA,IAAK;QACX2B,QAAQ,EAAEA,QAAS;QACnBb,aAAa,EAAEA,aAAc;QAC7BS,UAAU,EAAEA,UAAW;QACvBU,UAAU,EAAEA;MAAW;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAErB;AAAC1D,EAAA,CAjHQD,GAAG;AAAA+D,EAAA,GAAH/D,GAAG;AAmHZ,eAAeA,GAAG;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}