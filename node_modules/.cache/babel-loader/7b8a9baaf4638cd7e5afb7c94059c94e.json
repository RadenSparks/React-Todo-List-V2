{"ast":null,"code":"import { useUNSTABLE_PortalContext as $96b38030c423d352$export$574e9b0fb070c3b0 } from \"./PortalProvider.mjs\";\nimport { ClearPressResponder as $1CM7W$ClearPressResponder } from \"@react-aria/interactions\";\nimport { FocusScope as $1CM7W$FocusScope } from \"@react-aria/focus\";\nimport $1CM7W$react, { useState as $1CM7W$useState, useMemo as $1CM7W$useMemo, useContext as $1CM7W$useContext } from \"react\";\nimport $1CM7W$reactdom from \"react-dom\";\nimport { useIsSSR as $1CM7W$useIsSSR } from \"@react-aria/ssr\";\nimport { useLayoutEffect as $1CM7W$useLayoutEffect } from \"@react-aria/utils\";\n\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $337b884510726a0d$export$a2200b96afd16271 = /*#__PURE__*/(0, $1CM7W$react).createContext(null);\nfunction $337b884510726a0d$export$c6fdb837b070b4ff(props) {\n  let isSSR = (0, $1CM7W$useIsSSR)();\n  let {\n    portalContainer = isSSR ? null : document.body,\n    isExiting: isExiting\n  } = props;\n  let [contain, setContain] = (0, $1CM7W$useState)(false);\n  let contextValue = (0, $1CM7W$useMemo)(() => ({\n    contain: contain,\n    setContain: setContain\n  }), [contain, setContain]);\n  let {\n    getContainer: getContainer\n  } = (0, $96b38030c423d352$export$574e9b0fb070c3b0)();\n  if (!props.portalContainer && getContainer) portalContainer = getContainer();\n  if (!portalContainer) return null;\n  let contents = props.children;\n  if (!props.disableFocusManagement) contents = /*#__PURE__*/(0, $1CM7W$react).createElement((0, $1CM7W$FocusScope), {\n    restoreFocus: true,\n    contain: contain && !isExiting\n  }, contents);\n  contents = /*#__PURE__*/(0, $1CM7W$react).createElement($337b884510726a0d$export$a2200b96afd16271.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/(0, $1CM7W$react).createElement((0, $1CM7W$ClearPressResponder), null, contents));\n  return /*#__PURE__*/(0, $1CM7W$reactdom).createPortal(contents, portalContainer);\n}\nfunction $337b884510726a0d$export$14c98a7594375490() {\n  let ctx = (0, $1CM7W$useContext)($337b884510726a0d$export$a2200b96afd16271);\n  let setContain = ctx === null || ctx === void 0 ? void 0 : ctx.setContain;\n  (0, $1CM7W$useLayoutEffect)(() => {\n    setContain === null || setContain === void 0 ? void 0 : setContain(true);\n  }, [setContain]);\n}\nexport { $337b884510726a0d$export$a2200b96afd16271 as OverlayContext, $337b884510726a0d$export$c6fdb837b070b4ff as Overlay, $337b884510726a0d$export$14c98a7594375490 as useOverlayFocusContain };","map":{"version":3,"mappings":";;;;;;;;AAAA;;;;;;;;;;;;AAyCO,MAAMA,yDAAiB,gBAAI,EAAEC,aAAa,CAAC;AAM3C,SAASC,0CAAQC,KAAmB;EACzC,IAAIC,QAAQ,mBAAO;EACnB,IAAI;IAACC,kBAAkBD,QAAQ,OAAOE,SAASC,IAAI;IAAAC,WAAEA;EAAS,CAAC,GAAGL;EAClE,IAAI,CAACM,SAASC,WAAW,GAAG,mBAAO,EAAE;EACrC,IAAIC,eAAe,kBAAM,EAAE,OAAO;aAACF;gBAASC;EAAU,IAAI,CAACD,SAASC,WAAW;EAE/E,IAAI;IAAAE,cAACA;EAAY,CAAC,GAAG,6CAAwB;EAC7C,IAAK,CAACT,MAAME,eAAe,IAAIO,cAC7BP,kBAAkBO;EAGpB,IAAI,CAACP,iBACH,OAAO;EAGT,IAAIQ,WAAWV,MAAMW,QAAQ;EAC7B,IAAI,CAACX,MAAMY,sBAAsB,EAC/BF,wBACE,iCAAC,oBAAS;IAAEG;IAAaP,SAASA,WAAW,CAACD;KAC3CK;EAKPA,wBACE,gCAACb,0CAAeiB,QAAQ;IAACC,OAAOP;kBAC9B,iCAAC,6BAAkB,SAChBE;EAKP,oBAAO,mBAAO,EAAEM,YAAY,CAACN,UAAUR;AACzC;AAGO,SAASe;EACd,IAAIC,MAAM,qBAAS,EAAErB;EACrB,IAAIU,aAAaW,8CAAKX,UAAU;EAChC,0BAAc,EAAE;IACdA,mEAAa;EACf,GAAG,CAACA,WAAW;AACjB","names":["$337b884510726a0d$export$a2200b96afd16271","createContext","$337b884510726a0d$export$c6fdb837b070b4ff","props","isSSR","portalContainer","document","body","isExiting","contain","setContain","contextValue","getContainer","contents","children","disableFocusManagement","restoreFocus","Provider","value","createPortal","$337b884510726a0d$export$14c98a7594375490","ctx"],"sources":["D:\\Like, for real projects\\React-Todo-List-V2\\node_modules\\@react-aria\\overlays\\dist\\packages\\@react-aria\\overlays\\src\\Overlay.tsx"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ClearPressResponder} from '@react-aria/interactions';\nimport {FocusScope} from '@react-aria/focus';\nimport React, {ReactNode, useContext, useMemo, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {useIsSSR} from '@react-aria/ssr';\nimport {useLayoutEffect} from '@react-aria/utils';\nimport {useUNSTABLE_PortalContext} from './PortalProvider';\n\nexport interface OverlayProps {\n  /**\n   * The container element in which the overlay portal will be placed.\n   * @default document.body\n   */\n  portalContainer?: Element,\n  /** The overlay to render in the portal. */\n  children: ReactNode,\n  /**\n   * Disables default focus management for the overlay, including containment and restoration.\n   * This option should be used very carefully. When focus management is disabled, you must\n   * implement focus containment and restoration to ensure the overlay is keyboard accessible.\n   */\n  disableFocusManagement?: boolean,\n  /**\n   * Whether the overlay is currently performing an exit animation. When true,\n   * focus is allowed to move outside.\n   */\n  isExiting?: boolean\n}\n\nexport const OverlayContext = React.createContext(null);\n\n/**\n * A container which renders an overlay such as a popover or modal in a portal,\n * and provides a focus scope for the child elements.\n */\nexport function Overlay(props: OverlayProps) {\n  let isSSR = useIsSSR();\n  let {portalContainer = isSSR ? null : document.body, isExiting} = props;\n  let [contain, setContain] = useState(false);\n  let contextValue = useMemo(() => ({contain, setContain}), [contain, setContain]);\n\n  let {getContainer} = useUNSTABLE_PortalContext();\n  if  (!props.portalContainer && getContainer) {\n    portalContainer = getContainer();\n  }\n\n  if (!portalContainer) {\n    return null;\n  }\n\n  let contents = props.children;\n  if (!props.disableFocusManagement) {\n    contents = (\n      <FocusScope restoreFocus contain={contain && !isExiting}>\n        {contents}\n      </FocusScope>\n    );\n  }\n\n  contents = (\n    <OverlayContext.Provider value={contextValue}>\n      <ClearPressResponder>\n        {contents}\n      </ClearPressResponder>\n    </OverlayContext.Provider>\n  );\n\n  return ReactDOM.createPortal(contents, portalContainer);\n}\n\n/** @private */\nexport function useOverlayFocusContain() {\n  let ctx = useContext(OverlayContext);\n  let setContain = ctx?.setContain;\n  useLayoutEffect(() => {\n    setContain?.(true);\n  }, [setContain]);\n}\n"]},"metadata":{},"sourceType":"module"}