{"ast":null,"code":"import { CollectionBuilder as $eb2240fc39a57fa5$export$bf788dd355e3a401 } from \"./CollectionBuilder.mjs\";\nimport { useMemo as $lbNth$useMemo } from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $7613b1592d41b092$export$6cd28814d92fa9c9(props, factory, context) {\n  let builder = (0, $lbNth$useMemo)(() => new (0, $eb2240fc39a57fa5$export$bf788dd355e3a401)(), []);\n  let {\n    children: children,\n    items: items,\n    collection: collection\n  } = props;\n  let result = (0, $lbNth$useMemo)(() => {\n    if (collection) return collection;\n    let nodes = builder.build({\n      children: children,\n      items: items\n    }, context);\n    return factory(nodes);\n  }, [builder, children, items, collection, context, factory]);\n  return result;\n}\nexport { $7613b1592d41b092$export$6cd28814d92fa9c9 as useCollection };","map":{"version":3,"mappings":";;;AAAA;;;;;;;;;;;;AAsBO,SAASA,0CAAqFC,KAA8B,EAAEC,OAAgC,EAAEC,OAAiB;EACtL,IAAIC,UAAU,kBAAM,EAAE,MAAM,KAAI,4CAAgB,KAAQ,EAAE;EAC1D,IAAI;IAAAC,UAACA,QAAQ;IAAAC,OAAEA,KAAK;IAAAC,YAAEA;EAAU,CAAC,GAAGN;EACpC,IAAIO,SAAS,kBAAM,EAAE;IACnB,IAAID,YACF,OAAOA;IAET,IAAIE,QAAQL,QAAQM,KAAK,CAAC;gBAACL;aAAUC;IAAK,GAAGH;IAC7C,OAAOD,QAAQO;EACjB,GAAG,CAACL,SAASC,UAAUC,OAAOC,YAAYJ,SAASD,QAAQ;EAC3D,OAAOM;AACT","names":["$7613b1592d41b092$export$6cd28814d92fa9c9","props","factory","context","builder","children","items","collection","result","nodes","build"],"sources":["D:\\Like, for real projects\\React-Todo-List-V2\\node_modules\\@react-stately\\selection\\node_modules\\@react-stately\\collections\\dist\\packages\\@react-stately\\collections\\src\\useCollection.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, CollectionStateBase, Node} from '@react-types/shared';\nimport {CollectionBuilder} from './CollectionBuilder';\nimport {ReactElement, useMemo} from 'react';\n\ninterface CollectionOptions<T, C extends Collection<Node<T>>> extends Omit<CollectionStateBase<T, C>, 'children'> {\n  children?: ReactElement<any> | ReactElement<any>[] | ((item: T) => ReactElement<any>)\n}\n\ntype CollectionFactory<T, C extends Collection<Node<T>>> = (node: Iterable<Node<T>>) => C;\n\nexport function useCollection<T extends object, C extends Collection<Node<T>> = Collection<Node<T>>>(props: CollectionOptions<T, C>, factory: CollectionFactory<T, C>, context?: unknown): C {\n  let builder = useMemo(() => new CollectionBuilder<T>(), []);\n  let {children, items, collection} = props;\n  let result = useMemo(() => {\n    if (collection) {\n      return collection;\n    }\n    let nodes = builder.build({children, items}, context);\n    return factory(nodes);\n  }, [builder, children, items, collection, context, factory]);\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}