{"ast":null,"code":"import { filterDOMProps as $2xLm1$filterDOMProps, clamp as $2xLm1$clamp, mergeProps as $2xLm1$mergeProps } from \"@react-aria/utils\";\nimport { useLabel as $2xLm1$useLabel } from \"@react-aria/label\";\nimport { useNumberFormatter as $2xLm1$useNumberFormatter } from \"@react-aria/i18n\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $204d9ebcedfb8806$export$ed5abd763a836edc(props) {\n  let {\n    value = 0,\n    minValue = 0,\n    maxValue = 100,\n    valueLabel: valueLabel,\n    isIndeterminate: isIndeterminate,\n    formatOptions = {\n      style: 'percent'\n    }\n  } = props;\n  let domProps = (0, $2xLm1$filterDOMProps)(props, {\n    labelable: true\n  });\n  let {\n    labelProps: labelProps,\n    fieldProps: fieldProps\n  } = (0, $2xLm1$useLabel)({\n    ...props,\n    // Progress bar is not an HTML input element so it\n    // shouldn't be labeled by a <label> element.\n    labelElementType: 'span'\n  });\n  value = (0, $2xLm1$clamp)(value, minValue, maxValue);\n  let percentage = (value - minValue) / (maxValue - minValue);\n  let formatter = (0, $2xLm1$useNumberFormatter)(formatOptions);\n  if (!isIndeterminate && !valueLabel) {\n    let valueToFormat = formatOptions.style === 'percent' ? percentage : value;\n    valueLabel = formatter.format(valueToFormat);\n  }\n  return {\n    progressBarProps: (0, $2xLm1$mergeProps)(domProps, {\n      ...fieldProps,\n      'aria-valuenow': isIndeterminate ? undefined : value,\n      'aria-valuemin': minValue,\n      'aria-valuemax': maxValue,\n      'aria-valuetext': isIndeterminate ? undefined : valueLabel,\n      role: 'progressbar'\n    }),\n    labelProps: labelProps\n  };\n}\nexport { $204d9ebcedfb8806$export$ed5abd763a836edc as useProgressBar };","map":{"version":3,"mappings":";;;;AAAA;;;;;;;;;;;;AA8BO,SAASA,0CAAeC,KAA2B;EACxD,IAAI;IACFC,QAAQ;IACRC,WAAW;IACXC,WAAW;IAAAC,YACXA,UAAU;IAAAC,iBACVA,eAAe;IACfC,gBAAgB;MACdC,OAAO;IACT;EAAA,CACD,GAAGP;EAEJ,IAAIQ,WAAW,yBAAa,EAAER,OAAO;IAACS,WAAW;EAAI;EACrD,IAAI;IAAAC,YAACA,UAAU;IAAAC,YAAEA;EAAU,CAAC,GAAG,mBAAO,EAAE;IACtC,GAAGX,KAAK;IACR;IACA;IACAY,kBAAkB;EACpB;EAEAX,QAAQ,gBAAI,EAAEA,OAAOC,UAAUC;EAC/B,IAAIU,aAAa,CAACZ,QAAQC,QAAO,KAAMC,WAAWD,QAAO;EACzD,IAAIY,YAAY,6BAAiB,EAAER;EAEnC,IAAI,CAACD,mBAAmB,CAACD,YAAY;IACnC,IAAIW,gBAAgBT,cAAcC,KAAK,KAAK,YAAYM,aAAaZ;IACrEG,aAAaU,UAAUE,MAAM,CAACD;EAChC;EAEA,OAAO;IACLE,kBAAkB,qBAAS,EAAET,UAAU;MACrC,GAAGG,UAAU;MACb,iBAAiBN,kBAAkBa,YAAYjB;MAC/C,iBAAiBC;MACjB,iBAAiBC;MACjB,kBAAkBE,kBAAkBa,YAAYd;MAChDe,MAAM;IACR;gBACAT;EACF;AACF","names":["$204d9ebcedfb8806$export$ed5abd763a836edc","props","value","minValue","maxValue","valueLabel","isIndeterminate","formatOptions","style","domProps","labelable","labelProps","fieldProps","labelElementType","percentage","formatter","valueToFormat","format","progressBarProps","undefined","role"],"sources":["D:\\Like, for real projects\\React-Todo-List-V2\\node_modules\\@react-aria\\progress\\dist\\packages\\@react-aria\\progress\\src\\useProgressBar.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaProgressBarProps} from '@react-types/progress';\nimport {clamp, filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {DOMAttributes} from '@react-types/shared';\nimport {useLabel} from '@react-aria/label';\nimport {useNumberFormatter} from '@react-aria/i18n';\n\nexport interface ProgressBarAria {\n  /** Props for the progress bar container element. */\n  progressBarProps: DOMAttributes,\n  /** Props for the progress bar's visual label element (if any). */\n  labelProps: DOMAttributes\n}\n\n/**\n * Provides the accessibility implementation for a progress bar component.\n * Progress bars show either determinate or indeterminate progress of an operation\n * over time.\n */\nexport function useProgressBar(props: AriaProgressBarProps): ProgressBarAria {\n  let {\n    value = 0,\n    minValue = 0,\n    maxValue = 100,\n    valueLabel,\n    isIndeterminate,\n    formatOptions = {\n      style: 'percent'\n    }\n  } = props;\n\n  let domProps = filterDOMProps(props, {labelable: true});\n  let {labelProps, fieldProps} = useLabel({\n    ...props,\n    // Progress bar is not an HTML input element so it\n    // shouldn't be labeled by a <label> element.\n    labelElementType: 'span'\n  });\n\n  value = clamp(value, minValue, maxValue);\n  let percentage = (value - minValue) / (maxValue - minValue);\n  let formatter = useNumberFormatter(formatOptions);\n\n  if (!isIndeterminate && !valueLabel) {\n    let valueToFormat = formatOptions.style === 'percent' ? percentage : value;\n    valueLabel = formatter.format(valueToFormat);\n  }\n\n  return {\n    progressBarProps: mergeProps(domProps, {\n      ...fieldProps,\n      'aria-valuenow': isIndeterminate ? undefined : value,\n      'aria-valuemin': minValue,\n      'aria-valuemax': maxValue,\n      'aria-valuetext': isIndeterminate ? undefined : valueLabel as string,\n      role: 'progressbar'\n    }),\n    labelProps\n  };\n}\n"]},"metadata":{},"sourceType":"module"}