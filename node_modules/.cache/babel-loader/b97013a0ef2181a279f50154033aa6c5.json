{"ast":null,"code":"var _jsxFileName = \"D:\\\\Like, for real projects\\\\React-Todo-List-V2\\\\src\\\\components\\\\AddTaskForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Input, Select, Button, FormLabel } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTaskForm = _ref => {\n  _s();\n  let {\n    newTask,\n    setNewTask,\n    addTask\n  } = _ref;\n  const [taskDetails, setTaskDetails] = useState(''); // State for task details\n  const [priority, setPriority] = useState('low'); // Default priority\n  const [deadline, setDeadline] = useState(''); // State for deadline\n\n  const handleAddTask = () => {\n    if (newTask.trim()) {\n      // Ensure task name is not just whitespace\n      addTask(priority, taskDetails, deadline); // Pass the selected priority, details, and deadline\n      setNewTask(''); // Reset task name\n      setTaskDetails(''); // Reset task details\n      setPriority('low'); // Reset priority after adding\n      setDeadline(''); // Reset deadline after adding\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleAddTask();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mb: 3,\n    children: [\" \", /*#__PURE__*/_jsxDEV(FormLabel, {\n      htmlFor: \"taskName\",\n      children: \"Task Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"taskName\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value),\n      placeholder: \"Add a new task\",\n      onKeyPress: handleKeyPress,\n      \"aria-required\": \"true\" // Accessibility attribute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n      htmlFor: \"taskDetails\",\n      mt: 2,\n      children: \"Task Details:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"taskDetails\",\n      value: taskDetails,\n      onChange: e => setTaskDetails(e.target.value),\n      placeholder: \"Add task details\",\n      onKeyPress: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n      htmlFor: \"taskPriority\",\n      mt: 2,\n      children: \"Priority:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      id: \"taskPriority\",\n      value: priority,\n      onChange: e => setPriority(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"low\",\n        children: \"Low\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"medium\",\n        children: \"Medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"high\",\n        children: \"High\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n      htmlFor: \"taskDeadline\",\n      mt: 2,\n      children: \"Deadline:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"taskDeadline\",\n      type: \"date\",\n      value: deadline,\n      onChange: e => setDeadline(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleAddTask,\n      colorScheme: \"blue\" // Chakra UI color scheme for button\n      ,\n      mt: 3 // Margin-top for spacing\n      ,\n      isDisabled: !newTask.trim() // Disable button if task name is empty or whitespace\n      ,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTaskForm, \"BG/ylBS8U7GCQhvxQajIQtrdlLs=\");\n_c = AddTaskForm;\nAddTaskForm.propTypes = {\n  newTask: PropTypes.string.isRequired,\n  setNewTask: PropTypes.func.isRequired,\n  addTask: PropTypes.func.isRequired\n};\nexport default AddTaskForm;\nvar _c;\n$RefreshReg$(_c, \"AddTaskForm\");","map":{"version":3,"names":["React","useState","PropTypes","Box","Input","Select","Button","FormLabel","jsxDEV","_jsxDEV","AddTaskForm","_ref","_s","newTask","setNewTask","addTask","taskDetails","setTaskDetails","priority","setPriority","deadline","setDeadline","handleAddTask","trim","handleKeyPress","e","key","mb","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","target","placeholder","onKeyPress","mt","type","onClick","colorScheme","isDisabled","_c","propTypes","string","isRequired","func","$RefreshReg$"],"sources":["D:/Like, for real projects/React-Todo-List-V2/src/components/AddTaskForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Input, Select, Button, FormLabel } from '@chakra-ui/react';\r\n\r\nconst AddTaskForm = ({ newTask, setNewTask, addTask }) => {\r\n  const [taskDetails, setTaskDetails] = useState(''); // State for task details\r\n  const [priority, setPriority] = useState('low'); // Default priority\r\n  const [deadline, setDeadline] = useState(''); // State for deadline\r\n\r\n  const handleAddTask = () => {\r\n    if (newTask.trim()) { // Ensure task name is not just whitespace\r\n      addTask(priority, taskDetails, deadline); // Pass the selected priority, details, and deadline\r\n      setNewTask(''); // Reset task name\r\n      setTaskDetails(''); // Reset task details\r\n      setPriority('low'); // Reset priority after adding\r\n      setDeadline(''); // Reset deadline after adding\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleAddTask();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box mb={3}> {/* Margin-bottom for spacing */}\r\n      <FormLabel htmlFor=\"taskName\">Task Name:</FormLabel>\r\n      <Input \r\n        id=\"taskName\"\r\n        value={newTask}\r\n        onChange={(e) => setNewTask(e.target.value)}\r\n        placeholder=\"Add a new task\"\r\n        onKeyPress={handleKeyPress}\r\n        aria-required=\"true\" // Accessibility attribute\r\n      />\r\n      \r\n      <FormLabel htmlFor=\"taskDetails\" mt={2}>Task Details:</FormLabel>\r\n      <Input \r\n        id=\"taskDetails\"\r\n        value={taskDetails}\r\n        onChange={(e) => setTaskDetails(e.target.value)}\r\n        placeholder=\"Add task details\"\r\n        onKeyPress={handleKeyPress}\r\n      />\r\n      \r\n      <FormLabel htmlFor=\"taskPriority\" mt={2}>Priority:</FormLabel>\r\n      <Select \r\n        id=\"taskPriority\"\r\n        value={priority} \r\n        onChange={(e) => setPriority(e.target.value)} \r\n      >\r\n        <option value=\"low\">Low</option>\r\n        <option value=\"medium\">Medium</option>\r\n        <option value=\"high\">High</option>\r\n      </Select>\r\n      \r\n      <FormLabel htmlFor=\"taskDeadline\" mt={2}>Deadline:</FormLabel>\r\n      <Input \r\n        id=\"taskDeadline\"\r\n        type=\"date\"\r\n        value={deadline}\r\n        onChange={(e) => setDeadline(e.target.value)}\r\n      />\r\n      \r\n      <Button \r\n        onClick={handleAddTask} \r\n        colorScheme=\"blue\" // Chakra UI color scheme for button\r\n        mt={3} // Margin-top for spacing\r\n        isDisabled={!newTask.trim()} // Disable button if task name is empty or whitespace\r\n      >\r\n        Add Task\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nAddTaskForm.propTypes = {\r\n  newTask: PropTypes.string.isRequired,\r\n  setNewTask: PropTypes.func.isRequired,\r\n  addTask: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddTaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}