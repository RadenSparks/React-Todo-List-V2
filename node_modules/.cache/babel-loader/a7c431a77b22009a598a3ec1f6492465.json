{"ast":null,"code":"var _jsxFileName = \"D:\\\\Like, for real projects\\\\React-Todo-List-V2\\\\src\\\\components\\\\ToDo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDo = _ref => {\n  _s();\n  let {\n    toDo,\n    markDone,\n    setUpdateData,\n    deleteTask\n  } = _ref;\n  const [activeTaskId, setActiveTaskId] = useState(null); // State to track the active task for details\n\n  const toggleTaskDetails = id => {\n    setActiveTaskId(activeTaskId === id ? null : id); // Toggle task details visibility\n  };\n\n  // Function to determine the color based on priority\n  const getPriorityColor = priority => {\n    switch (priority) {\n      case 'Low':\n        return 'green';\n      case 'Medium':\n        return 'yellow';\n      case 'High':\n        return 'red';\n      default:\n        return 'gray';\n      // Default color if priority is unknown\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: toDo && toDo.length > 0 ? toDo.sort((a, b) => a.id - b.id) // Sort tasks by their IDs in ascending order\n    .map((task, index) => {\n      // Format the createdAt timestamp into a readable string\n      const createdAt = new Date(task.createdAt).toLocaleString();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col taskBg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: task.status ? 'done' : '',\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"taskNumber\",\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"taskText\",\n            onClick: () => toggleTaskDetails(task.id),\n            style: {\n              cursor: 'pointer'\n            },\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"taskCreatedAt\",\n            children: [\" (Created: \", createdAt, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"taskPriorityBox\",\n            style: {\n              backgroundColor: getPriorityColor(task.priority)\n            },\n            children: [\"(Priority: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"priorityText\",\n              children: task.priority\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 32\n            }, this), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"iconsWrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            title: \"Completed / Not Completed\",\n            onClick: () => markDone(task.id),\n            \"aria-label\": `Mark ${task.status ? 'not completed' : 'completed'}: ${task.title}`,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCircleCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 19\n          }, this), !task.status && /*#__PURE__*/_jsxDEV(\"span\", {\n            title: \"Edit\",\n            onClick: () => setUpdateData(task),\n            \"aria-label\": `Edit task: ${task.title}`,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            title: \"Delete\",\n            onClick: () => deleteTask(task.id),\n            \"aria-label\": `Delete task: ${task.title}`,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTrashCan\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), activeTaskId === task.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"taskDetails\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Details:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 24\n            }, this), \" \", task.details]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No tasks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(ToDo, \"H1bLT39upXQZab+qfCa/sxw2NZw=\");\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faCircleCheck","faPen","faTrashCan","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDo","_ref","_s","toDo","markDone","setUpdateData","deleteTask","activeTaskId","setActiveTaskId","toggleTaskDetails","id","getPriorityColor","priority","children","length","sort","a","b","map","task","index","createdAt","Date","toLocaleString","className","status","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","cursor","title","backgroundColor","icon","details","_c","$RefreshReg$"],"sources":["D:/Like, for real projects/React-Todo-List-V2/src/components/ToDo.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faCircleCheck, faPen, faTrashCan\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ToDo = ({ toDo, markDone, setUpdateData, deleteTask }) => {\r\n  const [activeTaskId, setActiveTaskId] = useState(null); // State to track the active task for details\r\n\r\n  const toggleTaskDetails = (id) => {\r\n    setActiveTaskId(activeTaskId === id ? null : id); // Toggle task details visibility\r\n  };\r\n\r\n  // Function to determine the color based on priority\r\n  const getPriorityColor = (priority) => {\r\n    switch (priority) {\r\n      case 'Low':\r\n        return 'green';\r\n      case 'Medium':\r\n        return 'yellow';\r\n      case 'High':\r\n        return 'red';\r\n      default:\r\n        return 'gray'; // Default color if priority is unknown\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {toDo && toDo.length > 0 ? (\r\n        toDo\r\n          .sort((a, b) => a.id - b.id) // Sort tasks by their IDs in ascending order\r\n          .map((task, index) => {\r\n            // Format the createdAt timestamp into a readable string\r\n            const createdAt = new Date(task.createdAt).toLocaleString();\r\n\r\n            return (\r\n              <div className=\"col taskBg\" key={task.id}>\r\n                <div className={task.status ? 'done' : ''}>\r\n                  <span className=\"taskNumber\">{index + 1}</span>\r\n                  <span className=\"taskText\" onClick={() => toggleTaskDetails(task.id)} style={{ cursor: 'pointer' }}>\r\n                    {task.title}\r\n                  </span>\r\n                  <span className=\"taskCreatedAt\"> (Created: {createdAt})</span>\r\n                  <span className=\"taskPriorityBox\" style={{ backgroundColor: getPriorityColor(task.priority) }}>\r\n                    {/* Boxed Priority */}\r\n                    (Priority: <span className=\"priorityText\">{task.priority}</span>)\r\n                  </span>\r\n                </div>\r\n                <div className=\"iconsWrap\">\r\n                  <span \r\n                    title=\"Completed / Not Completed\"\r\n                    onClick={() => markDone(task.id)}\r\n                    aria-label={`Mark ${task.status ? 'not completed' : 'completed'}: ${task.title}`}\r\n                  >\r\n                    <FontAwesomeIcon icon={faCircleCheck} />\r\n                  </span>\r\n\r\n                  {!task.status && (\r\n                    <span \r\n                      title=\"Edit\"\r\n                      onClick={() => setUpdateData(task)}\r\n                      aria-label={`Edit task: ${task.title}`}\r\n                    >\r\n                      <FontAwesomeIcon icon={faPen} />\r\n                    </span>\r\n                  )}\r\n\r\n                  <span \r\n                    title=\"Delete\"\r\n                    onClick={() => deleteTask(task.id)}\r\n                    aria-label={`Delete task: ${task.title}`}\r\n                  >\r\n                    <FontAwesomeIcon icon={faTrashCan} />\r\n                  </span>\r\n                </div>\r\n\r\n                {/* Display task details if this task is active */}\r\n                {activeTaskId === task.id && (\r\n                  <div className=\"taskDetails\">\r\n                    <p><strong>Details:</strong> {task.details}</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            );\r\n          })\r\n      ) : (\r\n        <div>No tasks available.</div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ToDo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}