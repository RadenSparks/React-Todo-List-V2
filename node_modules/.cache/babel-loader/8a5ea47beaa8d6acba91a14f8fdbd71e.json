{"ast":null,"code":"import { CalendarDate as $35ea8db9cb2ccb90$export$99faa760c7908e4f } from \"./CalendarDate.mjs\";\nimport { fromExtendedYear as $3b62074eb05584b2$export$4475b7e617eb123c, getExtendedYear as $3b62074eb05584b2$export$c36e0ecb2d4fa69d, GregorianCalendar as $3b62074eb05584b2$export$80ee6245ec4f29ec } from \"./GregorianCalendar.mjs\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ // Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nconst $5f31bd6f0c8940b2$var$TAIWAN_ERA_START = 1911;\nfunction $5f31bd6f0c8940b2$var$gregorianYear(date) {\n  return date.era === 'minguo' ? date.year + $5f31bd6f0c8940b2$var$TAIWAN_ERA_START : 1 - date.year + $5f31bd6f0c8940b2$var$TAIWAN_ERA_START;\n}\nfunction $5f31bd6f0c8940b2$var$gregorianToTaiwan(year) {\n  let y = year - $5f31bd6f0c8940b2$var$TAIWAN_ERA_START;\n  if (y > 0) return ['minguo', y];else return ['before_minguo', 1 - y];\n}\nclass $5f31bd6f0c8940b2$export$65e01080afcb0799 extends (0, $3b62074eb05584b2$export$80ee6245ec4f29ec) {\n  fromJulianDay(jd) {\n    let date = super.fromJulianDay(jd);\n    let extendedYear = (0, $3b62074eb05584b2$export$c36e0ecb2d4fa69d)(date.era, date.year);\n    let [era, year] = $5f31bd6f0c8940b2$var$gregorianToTaiwan(extendedYear);\n    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, era, year, date.month, date.day);\n  }\n  toJulianDay(date) {\n    return super.toJulianDay($5f31bd6f0c8940b2$var$toGregorian(date));\n  }\n  getEras() {\n    return ['before_minguo', 'minguo'];\n  }\n  balanceDate(date) {\n    let [era, year] = $5f31bd6f0c8940b2$var$gregorianToTaiwan($5f31bd6f0c8940b2$var$gregorianYear(date));\n    date.era = era;\n    date.year = year;\n  }\n  isInverseEra(date) {\n    return date.era === 'before_minguo';\n  }\n  getDaysInMonth(date) {\n    return super.getDaysInMonth($5f31bd6f0c8940b2$var$toGregorian(date));\n  }\n  getYearsInEra(date) {\n    return date.era === 'before_minguo' ? 9999 : 9999 - $5f31bd6f0c8940b2$var$TAIWAN_ERA_START;\n  }\n  constructor() {\n    super(...arguments);\n    this.identifier = 'roc' // Republic of China\n    ;\n  }\n}\nfunction $5f31bd6f0c8940b2$var$toGregorian(date) {\n  let [era, year] = (0, $3b62074eb05584b2$export$4475b7e617eb123c)($5f31bd6f0c8940b2$var$gregorianYear(date));\n  return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(era, year, date.month, date.day);\n}\nexport { $5f31bd6f0c8940b2$export$65e01080afcb0799 as TaiwanCalendar };","map":{"version":3,"mappings":";;;AAAA;;;;;;;;;;GAAA,CAYA;AACA;;AAOA,MAAMA,yCAAmB;AAEzB,SAASC,oCAAcC,IAAqB;EAC1C,OAAOA,KAAKC,GAAG,KAAK,WAChBD,KAAKE,IAAI,GAAGJ,yCACZ,IAAIE,KAAKE,IAAI,GAAGJ;AACtB;AAEA,SAASK,wCAAkBD,IAAY;EACrC,IAAIE,IAAIF,OAAOJ;EACf,IAAIM,IAAI,GACN,OAAO,CAAC,UAAUA,EAAE,MAEpB,OAAO,CAAC,iBAAiB,IAAIA,EAAE;AAEnC;AAOO,MAAMC,mDAAuB,4CAAgB;EAGlDC,cAAcC,EAAU,EAAgB;IACtC,IAAIP,OAAO,KAAK,CAACM,cAAcC;IAC/B,IAAIC,eAAe,6CAAc,EAAER,KAAKC,GAAG,EAAED,KAAKE,IAAI;IACtD,IAAI,CAACD,KAAKC,KAAK,GAAGC,wCAAkBK;IACpC,OAAO,KAAI,4CAAW,EAAE,IAAI,EAAEP,KAAKC,MAAMF,KAAKS,KAAK,EAAET,KAAKU,GAAG;EAC/D;EAEAC,YAAYX,IAAqB,EAAE;IACjC,OAAO,KAAK,CAACW,YAAYC,kCAAYZ;EACvC;EAEAa,UAAU;IACR,OAAO,CAAC,iBAAiB,SAAS;EACpC;EAEAC,YAAYd,IAA8B,EAAE;IAC1C,IAAI,CAACC,KAAKC,KAAK,GAAGC,wCAAkBJ,oCAAcC;IAClDA,KAAKC,GAAG,GAAGA;IACXD,KAAKE,IAAI,GAAGA;EACd;EAEAa,aAAaf,IAAqB,EAAW;IAC3C,OAAOA,KAAKC,GAAG,KAAK;EACtB;EAEAe,eAAehB,IAAqB,EAAU;IAC5C,OAAO,KAAK,CAACgB,eAAeJ,kCAAYZ;EAC1C;EAEAiB,cAAcjB,IAAqB,EAAU;IAC3C,OAAOA,KAAKC,GAAG,KAAK,kBAAkB,OAAO,OAAOH;EACtD;;;SAjCAoB,aAAa,MAAO;IAAA;;AAkCtB;AAEA,SAASN,kCAAYZ,IAAqB;EACxC,IAAI,CAACC,KAAKC,KAAK,GAAG,6CAAe,EAAEH,oCAAcC;EACjD,OAAO,KAAI,4CAAW,EACpBC,KACAC,MACAF,KAAKS,KAAK,EACVT,KAAKU,GAAG;AAEZ","names":["$5f31bd6f0c8940b2$var$TAIWAN_ERA_START","$5f31bd6f0c8940b2$var$gregorianYear","date","era","year","$5f31bd6f0c8940b2$var$gregorianToTaiwan","y","$5f31bd6f0c8940b2$export$65e01080afcb0799","fromJulianDay","jd","extendedYear","month","day","toJulianDay","$5f31bd6f0c8940b2$var$toGregorian","getEras","balanceDate","isInverseEra","getDaysInMonth","getYearsInEra","identifier"],"sources":["D:\\Like, for real projects\\React-Todo-List-V2\\node_modules\\@internationalized\\date\\dist\\packages\\@internationalized\\date\\src\\calendars\\TaiwanCalendar.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {fromExtendedYear, getExtendedYear, GregorianCalendar} from './GregorianCalendar';\nimport {Mutable} from '../utils';\n\nconst TAIWAN_ERA_START = 1911;\n\nfunction gregorianYear(date: AnyCalendarDate) {\n  return date.era === 'minguo'\n    ? date.year + TAIWAN_ERA_START\n    : 1 - date.year + TAIWAN_ERA_START;\n}\n\nfunction gregorianToTaiwan(year: number): [string, number] {\n  let y = year - TAIWAN_ERA_START;\n  if (y > 0) {\n    return ['minguo', y];\n  } else {\n    return ['before_minguo', 1 - y];\n  }\n}\n\n/**\n * The Taiwanese calendar is the same as the Gregorian calendar, but years\n * are numbered starting from 1912 (Gregorian). Two eras are supported:\n * 'before_minguo' and 'minguo'.\n */\nexport class TaiwanCalendar extends GregorianCalendar {\n  identifier = 'roc'; // Republic of China\n\n  fromJulianDay(jd: number): CalendarDate {\n    let date = super.fromJulianDay(jd);\n    let extendedYear = getExtendedYear(date.era, date.year);\n    let [era, year] = gregorianToTaiwan(extendedYear);\n    return new CalendarDate(this, era, year, date.month, date.day);\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    return super.toJulianDay(toGregorian(date));\n  }\n\n  getEras() {\n    return ['before_minguo', 'minguo'];\n  }\n\n  balanceDate(date: Mutable<AnyCalendarDate>) {\n    let [era, year] = gregorianToTaiwan(gregorianYear(date));\n    date.era = era;\n    date.year = year;\n  }\n\n  isInverseEra(date: AnyCalendarDate): boolean {\n    return date.era === 'before_minguo';\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    return super.getDaysInMonth(toGregorian(date));\n  }\n\n  getYearsInEra(date: AnyCalendarDate): number {\n    return date.era === 'before_minguo' ? 9999 : 9999 - TAIWAN_ERA_START;\n  }\n}\n\nfunction toGregorian(date: AnyCalendarDate) {\n  let [era, year] = fromExtendedYear(gregorianYear(date));\n  return new CalendarDate(\n    era,\n    year,\n    date.month,\n    date.day\n  );\n}\n"]},"metadata":{},"sourceType":"module"}