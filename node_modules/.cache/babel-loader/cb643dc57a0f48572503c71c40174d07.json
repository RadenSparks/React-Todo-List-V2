{"ast":null,"code":"var _jsxFileName = \"D:\\\\Like, for real projects\\\\React-Todo-List-V2\\\\src\\\\components\\\\UpdateForm.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UpdateForm = _ref => {\n  let {\n    updateData,\n    changeHolder,\n    updateTask,\n    cancelUpdate\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: updateData && updateData.title // Binds the input value to updateData.title if updateData exists\n          ,\n          onChange: e => changeHolder(e) // Calls changeHolder function to update the input value on change\n          ,\n          className: \"form-control form-control-lg\" // Applies Bootstrap styling\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: updateTask // Calls updateTask function when clicked\n          ,\n          className: \"btn btn-lg btn-success mr-20\" // Applies Bootstrap styling and margin\n          ,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: cancelUpdate // Calls cancelUpdate function when clicked\n          ,\n          className: \"btn btn-lg btn-warning\" // Applies Bootstrap styling for a warning button\n          ,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = UpdateForm;\nexport default UpdateForm; // Exports the UpdateForm component for use in other parts of the application\nvar _c;\n$RefreshReg$(_c, \"UpdateForm\");","map":{"version":3,"names":["UpdateForm","_ref","updateData","changeHolder","updateTask","cancelUpdate","_jsxDEV","_Fragment","children","className","value","title","onChange","e","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Like, for real projects/React-Todo-List-V2/src/components/UpdateForm.jsx"],"sourcesContent":["const UpdateForm = ({ updateData, changeHolder, updateTask, cancelUpdate }) => {\r\n  return(\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          {/* Input field for updating the task title */}\r\n          <input \r\n            value={ updateData && updateData.title } // Binds the input value to updateData.title if updateData exists\r\n            onChange={ (e) => changeHolder(e)} // Calls changeHolder function to update the input value on change\r\n            className=\"form-control form-control-lg\" // Applies Bootstrap styling\r\n          />\r\n        </div>\r\n        <div className=\"col-auto\">\r\n          {/* Button to save the updated task */}\r\n          <button\r\n            onClick={updateTask} // Calls updateTask function when clicked\r\n            className=\"btn btn-lg btn-success mr-20\" // Applies Bootstrap styling and margin\r\n          >Update</button>\r\n          {/* Button to cancel the update action */}\r\n          <button\r\n            onClick={cancelUpdate} // Calls cancelUpdate function when clicked\r\n            className=\"btn btn-lg btn-warning\" // Applies Bootstrap styling for a warning button\r\n          >Cancel</button>\r\n        </div>\r\n      </div>\r\n      <br />  \r\n    </>\r\n  )\r\n}\r\n\r\nexport default UpdateForm; // Exports the UpdateForm component for use in other parts of the application\r\n"],"mappings":";;;AAAA,MAAMA,UAAU,GAAGC,IAAA,IAA4D;EAAA,IAA3D;IAAEC,UAAU;IAAEC,YAAY;IAAEC,UAAU;IAAEC;EAAa,CAAC,GAAAJ,IAAA;EACxE,oBACEK,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBACEF,OAAA;MAAKG,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBF,OAAA;QAAKG,SAAS,EAAC,KAAK;QAAAD,QAAA,eAElBF,OAAA;UACEI,KAAK,EAAGR,UAAU,IAAIA,UAAU,CAACS,KAAO,CAAC;UAAA;UACzCC,QAAQ,EAAIC,CAAC,IAAKV,YAAY,CAACU,CAAC,CAAE,CAAC;UAAA;UACnCJ,SAAS,EAAC,8BAA8B,CAAC;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNX,OAAA;QAAKG,SAAS,EAAC,UAAU;QAAAD,QAAA,gBAEvBF,OAAA;UACEY,OAAO,EAAEd,UAAW,CAAC;UAAA;UACrBK,SAAS,EAAC,8BAA8B,CAAC;UAAA;UAAAD,QAAA,EAC1C;QAAM;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAEhBX,OAAA;UACEY,OAAO,EAAEb,YAAa,CAAC;UAAA;UACvBI,SAAS,EAAC,wBAAwB,CAAC;UAAA;UAAAD,QAAA,EACpC;QAAM;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNX,OAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAAAE,EAAA,GA5BKnB,UAAU;AA8BhB,eAAeA,UAAU,CAAC,CAAC;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}