{"ast":null,"code":"var _jsxFileName = \"D:\\\\Like, for real projects\\\\React-Todo-List-V2\\\\src\\\\components\\\\ToDo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDo = _ref => {\n  _s();\n  let {\n    toDo,\n    markDone,\n    setUpdateData,\n    deleteTask\n  } = _ref;\n  const [selectedTaskId, setSelectedTaskId] = useState(null); // State to track selected task\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: toDo && toDo.sort((a, b) => a.id > b.id ? 1 : -1).map((task, index) => {\n      // Format the createdAt date\n      const createdAt = new Date(task.createdAt).toLocaleString();\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col taskBg\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: task.status ? 'done' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskNumber\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskText\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskPriority\",\n              children: task.priority\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskTime\",\n              children: createdAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"iconsWrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                title: \"Completed / Not Completed\",\n                onClick: () => markDone(task.id),\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faCircleCheck\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 21\n              }, this), task.status ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n                title: \"Edit\",\n                onClick: () => setUpdateData(task),\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faPen\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                title: \"Delete\",\n                onClick: () => deleteTask(task.id),\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faTrashCan\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                title: \"View Details\",\n                onClick: () => setSelectedTaskId(selectedTaskId === task.id ? null : task.id) // Toggle selected task\n                ,\n                children: selectedTaskId === task.id ? 'Hide Details' : 'View Details'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this), selectedTaskId === task.id &&\n        /*#__PURE__*/\n        // Conditionally render details box\n        _jsxDEV(\"div\", {\n          className: \"taskDetailsBox\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Details:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 22\n            }, this), \" \", task.details || 'No details provided.']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false);\n};\n_s(ToDo, \"WJvNOFLVZ6rLhfEJhfvTsPMhPfc=\");\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faCircleCheck","faPen","faTrashCan","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDo","_ref","_s","toDo","markDone","setUpdateData","deleteTask","selectedTaskId","setSelectedTaskId","children","sort","a","b","id","map","task","index","createdAt","Date","toLocaleString","className","status","fileName","_jsxFileName","lineNumber","columnNumber","title","priority","onClick","icon","details","_c","$RefreshReg$"],"sources":["D:/Like, for real projects/React-Todo-List-V2/src/components/ToDo.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ToDo = ({ toDo, markDone, setUpdateData, deleteTask }) => {\r\n  const [selectedTaskId, setSelectedTaskId] = useState(null); // State to track selected task\r\n\r\n  return (\r\n    <>\r\n      {toDo && toDo\r\n        .sort((a, b) => a.id > b.id ? 1 : -1)\r\n        .map((task, index) => {\r\n          // Format the createdAt date\r\n          const createdAt = new Date(task.createdAt).toLocaleString();\r\n\r\n          return (\r\n            <React.Fragment key={task.id}>\r\n              <div className=\"col taskBg\">\r\n                <div className={task.status ? 'done' : ''}>\r\n                  <span className=\"taskNumber\">{index + 1}</span>\r\n                  <span className=\"taskText\">{task.title}</span>\r\n                  <span className=\"taskPriority\">{task.priority}</span> {/* Always display priority */}\r\n                  <span className=\"taskTime\">{createdAt}</span> {/* Displaying the created time */}\r\n                  <div className=\"iconsWrap\">\r\n                    <span title=\"Completed / Not Completed\"\r\n                      onClick={() => markDone(task.id)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faCircleCheck} />\r\n                    </span>\r\n\r\n                    {task.status ? null : (\r\n                      <span title=\"Edit\"\r\n                        onClick={() => setUpdateData(task)}\r\n                      >\r\n                        <FontAwesomeIcon icon={faPen} />\r\n                      </span>\r\n                    )}\r\n\r\n                    <span title=\"Delete\"\r\n                      onClick={() => deleteTask(task.id)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrashCan} />\r\n                    </span>\r\n\r\n                    <span title=\"View Details\"\r\n                      onClick={() => setSelectedTaskId(selectedTaskId === task.id ? null : task.id)} // Toggle selected task\r\n                    >\r\n                      {selectedTaskId === task.id ? 'Hide Details' : 'View Details'}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {selectedTaskId === task.id && ( // Conditionally render details box\r\n                <div className=\"taskDetailsBox\">\r\n                  <p><strong>Details:</strong> {task.details || 'No details provided.'}</p>\r\n                </div>\r\n              )}\r\n            </React.Fragment>\r\n          );\r\n        })\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ToDo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}