{"ast":null,"code":"var _jsxFileName = \"D:\\\\Like, for real projects\\\\React-Todo-List-V2\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { ChakraProvider, Box, Button, Heading, Text, extendTheme } from '@chakra-ui/react';\nimport AddTaskForm from './components/AddTaskForm.jsx';\nimport UpdateForm from './components/UpdateForm.jsx';\nimport ToDo from './components/ToDo.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = extendTheme({\n  config: {\n    initialColorMode: 'light',\n    useSystemColorMode: false\n  }\n});\nfunction App() {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    const savedMode = localStorage.getItem('isDarkMode');\n    return savedMode === 'true';\n  });\n  const [toDo, setToDo] = useState([{\n    id: 1,\n    title: 'Task 1',\n    status: false,\n    createdAt: new Date().toLocaleString(),\n    priority: 'low',\n    details: ''\n  }, {\n    id: 2,\n    title: 'Task 2',\n    status: false,\n    createdAt: new Date().toLocaleString(),\n    priority: 'medium',\n    details: ''\n  }]);\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState(null);\n  const addTask = (priority, details) => {\n    if (newTask.trim()) {\n      const newId = toDo.length ? Math.max(toDo.map(task => task.id)) + 1 : 1;\n      setToDo(prevTasks => [...prevTasks, {\n        id: newId,\n        title: newTask,\n        status: false,\n        createdAt: new Date().toLocaleString(),\n        priority,\n        details\n      }]);\n      setNewTask('');\n    }\n  };\n  const deleteTask = id => {\n    if (window.confirm(\"Are you sure you want to delete this task?\")) {\n      setToDo(prevTasks => prevTasks.filter(task => task.id !== id));\n    }\n  };\n  const markDone = id => {\n    setToDo(prevTasks => prevTasks.map(task => task.id === id ? {\n      ...task,\n      status: !task.status\n    } : task));\n  };\n  const cancelUpdate = () => {\n    setUpdateData(null);\n  };\n  const handleUpdateChange = e => {\n    setUpdateData(prevData => ({\n      ...prevData,\n      title: e.target.value\n    }));\n  };\n  const updateTask = (taskId, updatedData) => {\n    setToDo(prevTasks => prevTasks.map(task => task.id === taskId ? {\n      ...task,\n      ...updatedData\n    } : task));\n    setUpdateData(null);\n  };\n  const toggleTheme = () => {\n    const newMode = !isDarkMode;\n    setIsDarkMode(newMode);\n    localStorage.setItem('isDarkMode', newMode);\n  };\n  useEffect(() => {\n    document.body.setAttribute('data-theme', isDarkMode ? 'dark' : 'light');\n  }, [isDarkMode]);\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: `App ${isDarkMode ? 'dark-mode' : 'light-mode'}`,\n      p: 5,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h2\",\n        size: \"lg\",\n        mb: 4,\n        children: \"To Do List App (ReactJS)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleTheme,\n        colorScheme: \"teal\",\n        mb: 4,\n        children: [\"Toggle to \", isDarkMode ? 'Light' : 'Dark', \" Mode\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), updateData ? /*#__PURE__*/_jsxDEV(UpdateForm, {\n        updateData: updateData,\n        changeHolder: handleUpdateChange,\n        updateTask: updateTask,\n        cancelUpdate: cancelUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(AddTaskForm, {\n        newTask: newTask,\n        setNewTask: setNewTask,\n        addTask: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), toDo.length === 0 ? /*#__PURE__*/_jsxDEV(Text, {\n        children: \"No Tasks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ToDo, {\n        toDo: toDo,\n        markDone: markDone,\n        setUpdateData: setUpdateData,\n        deleteTask: deleteTask,\n        updateTask: updateTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ysiYGM6dX6sEv+RYPev5SfTolc4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","ChakraProvider","Box","Button","Heading","Text","extendTheme","AddTaskForm","UpdateForm","ToDo","jsxDEV","_jsxDEV","theme","config","initialColorMode","useSystemColorMode","App","_s","isDarkMode","setIsDarkMode","savedMode","localStorage","getItem","toDo","setToDo","id","title","status","createdAt","Date","toLocaleString","priority","details","newTask","setNewTask","updateData","setUpdateData","addTask","trim","newId","length","Math","max","map","task","prevTasks","deleteTask","window","confirm","filter","markDone","cancelUpdate","handleUpdateChange","e","prevData","target","value","updateTask","taskId","updatedData","toggleTheme","newMode","setItem","document","body","setAttribute","children","className","p","as","size","mb","fileName","_jsxFileName","lineNumber","columnNumber","onClick","colorScheme","changeHolder","_c","$RefreshReg$"],"sources":["D:/Like, for real projects/React-Todo-List-V2/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { ChakraProvider, Box, Button, Heading, Text, extendTheme } from '@chakra-ui/react';\r\nimport AddTaskForm from './components/AddTaskForm.jsx';\r\nimport UpdateForm from './components/UpdateForm.jsx';\r\nimport ToDo from './components/ToDo.jsx';\r\n\r\nconst theme = extendTheme({\r\n  config: {\r\n    initialColorMode: 'light',\r\n    useSystemColorMode: false,\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const [isDarkMode, setIsDarkMode] = useState(() => {\r\n    const savedMode = localStorage.getItem('isDarkMode');\r\n    return savedMode === 'true';\r\n  });\r\n\r\n  const [toDo, setToDo] = useState([\r\n    { id: 1, title: 'Task 1', status: false, createdAt: new Date().toLocaleString(), priority: 'low', details: '' },\r\n    { id: 2, title: 'Task 2', status: false, createdAt: new Date().toLocaleString(), priority: 'medium', details: '' }\r\n  ]);\r\n\r\n  const [newTask, setNewTask] = useState('');\r\n  const [updateData, setUpdateData] = useState(null);\r\n\r\n  const addTask = (priority, details) => {\r\n    if (newTask.trim()) {\r\n      const newId = toDo.length ? Math.max(toDo.map(task => task.id)) + 1 : 1;\r\n\r\n      setToDo(prevTasks => [\r\n        ...prevTasks,\r\n        { id: newId, title: newTask, status: false, createdAt: new Date().toLocaleString(), priority, details }\r\n      ]);\r\n\r\n      setNewTask('');\r\n    }\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this task?\")) {\r\n      setToDo(prevTasks => prevTasks.filter(task => task.id !== id));\r\n    }\r\n  };\r\n\r\n  const markDone = (id) => {\r\n    setToDo(prevTasks => prevTasks.map(task => \r\n      task.id === id ? { ...task, status: !task.status } : task\r\n    ));\r\n  };\r\n\r\n  const cancelUpdate = () => {\r\n    setUpdateData(null);\r\n  };\r\n\r\n  const handleUpdateChange = (e) => {\r\n    setUpdateData(prevData => ({ ...prevData, title: e.target.value }));\r\n  };\r\n\r\n  const updateTask = (taskId, updatedData) => {\r\n    setToDo(prevTasks => prevTasks.map(task => \r\n      task.id === taskId ? { ...task, ...updatedData } : task\r\n    ));\r\n    setUpdateData(null);\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    const newMode = !isDarkMode;\r\n    setIsDarkMode(newMode);\r\n    localStorage.setItem('isDarkMode', newMode);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.setAttribute('data-theme', isDarkMode ? 'dark' : 'light');\r\n  }, [isDarkMode]);\r\n\r\n  return (\r\n    <ChakraProvider theme={theme}>\r\n      <Box className={`App ${isDarkMode ? 'dark-mode' : 'light-mode'}`} p={5}>\r\n        <Heading as=\"h2\" size=\"lg\" mb={4}>To Do List App (ReactJS)</Heading>\r\n        <Button onClick={toggleTheme} colorScheme=\"teal\" mb={4}>\r\n          Toggle to {isDarkMode ? 'Light' : 'Dark'} Mode\r\n        </Button>\r\n\r\n        {updateData ? (\r\n          <UpdateForm\r\n            updateData={updateData}\r\n            changeHolder={handleUpdateChange}\r\n            updateTask={updateTask}\r\n            cancelUpdate={cancelUpdate}\r\n          />\r\n        ) : (\r\n          <AddTaskForm\r\n            newTask={newTask}\r\n            setNewTask={setNewTask}\r\n            addTask={addTask}\r\n          />\r\n        )}\r\n\r\n        {toDo.length === 0 ? (\r\n          <Text>No Tasks...</Text>\r\n        ) : (\r\n          <ToDo\r\n            toDo={toDo}\r\n            markDone={markDone}\r\n            setUpdateData={setUpdateData}\r\n            deleteTask={deleteTask}\r\n            updateTask={updateTask}\r\n          />\r\n        )}\r\n      </Box>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}