{"ast":null,"code":"var _jsxFileName = \"D:\\\\Like, for real projects\\\\React-Todo-List-V2\\\\src\\\\components\\\\ToDo.jsx\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDo = _ref => {\n  let {\n    toDo,\n    markDone,\n    setUpdateData,\n    deleteTask\n  } = _ref;\n  const getPriorityLabel = priority => {\n    switch (priority) {\n      case 'low':\n        return 'Low';\n      case 'medium':\n        return 'Medium';\n      case 'high':\n        return 'High';\n      default:\n        return 'Unknown';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: toDo && toDo.sort((a, b) => a.id > b.id ? 1 : -1).map((task, index) => {\n      // Format the createdAt timestamp\n      const createdAt = new Date(task.createdAt).toLocaleString();\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col taskBg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: task.status ? 'done' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskNumber\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskText\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskCreatedAt\",\n              children: [\" (Created: \", createdAt, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskPriority\",\n              children: [\" (Priority: \", getPriorityLabel(task.priority), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"iconsWrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Completed / Not Completed\",\n              onClick: e => markDone(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCircleCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this), task.status ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Edit\",\n              onClick: () => setUpdateData(task),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Delete\",\n              onClick: () => deleteTask(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrashCan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false);\n};\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","FontAwesomeIcon","faCircleCheck","faPen","faTrashCan","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDo","_ref","toDo","markDone","setUpdateData","deleteTask","getPriorityLabel","priority","children","sort","a","b","id","map","task","index","createdAt","Date","toLocaleString","className","status","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","e","icon","_c","$RefreshReg$"],"sources":["D:/Like, for real projects/React-Todo-List-V2/src/components/ToDo.jsx"],"sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faCircleCheck, faPen, faTrashCan\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ToDo = ({ toDo, markDone, setUpdateData, deleteTask }) => {\r\n  const getPriorityLabel = (priority) => {\r\n    switch (priority) {\r\n      case 'low':\r\n        return 'Low';\r\n      case 'medium':\r\n        return 'Medium';\r\n      case 'high':\r\n        return 'High';\r\n      default:\r\n        return 'Unknown';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {toDo && toDo\r\n        .sort((a, b) => a.id > b.id ? 1 : -1)\r\n        .map((task, index) => {\r\n          // Format the createdAt timestamp\r\n          const createdAt = new Date(task.createdAt).toLocaleString();\r\n\r\n          return (\r\n            <React.Fragment key={task.id}>\r\n              <div className=\"col taskBg\">\r\n                <div className={task.status ? 'done' : ''}>\r\n                  <span className=\"taskNumber\">{index + 1}</span>\r\n                  <span className=\"taskText\">{task.title}</span>\r\n                  <span className=\"taskCreatedAt\"> (Created: {createdAt})</span>\r\n                  {/* Display the priority */}\r\n                  <span className=\"taskPriority\"> (Priority: {getPriorityLabel(task.priority)})</span>\r\n                </div>\r\n                <div className=\"iconsWrap\">\r\n                  <span title=\"Completed / Not Completed\"\r\n                    onClick={(e) => markDone(task.id)}\r\n                  >\r\n                    <FontAwesomeIcon icon={faCircleCheck} />\r\n                  </span>\r\n\r\n                  {task.status ? null : (\r\n                    <span title=\"Edit\"\r\n                      onClick={() => setUpdateData(task)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faPen} />\r\n                    </span>\r\n                  )}\r\n\r\n                  <span title=\"Delete\"\r\n                    onClick={() => deleteTask(task.id)}\r\n                  >\r\n                    <FontAwesomeIcon icon={faTrashCan} />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        })\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ToDo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}