{"ast":null,"code":"var _jsxFileName = \"D:\\\\Like, for real projects\\\\React-Todo-List-V2\\\\src\\\\components\\\\ToDo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDo = _ref => {\n  _s();\n  let {\n    toDo,\n    markDone,\n    setUpdateData,\n    deleteTask\n  } = _ref;\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [editedDetails, setEditedDetails] = useState('');\n  const handleEditClick = task => {\n    setEditingTaskId(task.id);\n    setEditedDetails(task.details);\n  };\n  const handleSaveClick = taskId => {\n    // Here you would typically call a function to save the updated details\n    // For example: updateTaskDetails(taskId, editedDetails);\n    console.log(`Updated task ${taskId}: ${editedDetails}`);\n    setEditingTaskId(null); // Close the edit mode\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: toDo && toDo.length > 0 ? toDo.sort((a, b) => a.id - b.id) // Sort tasks by their IDs in ascending order\n    .map((task, index) => {\n      // Format the createdAt timestamp into a readable string\n      const createdAt = new Date(task.createdAt).toLocaleString();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col taskBg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: task.status ? 'done' : '',\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"taskNumber\",\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"taskText\",\n            style: {\n              cursor: 'pointer'\n            },\n            children: [task.title, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskDetails\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Details:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 23\n              }, this), \" \", task.details]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"taskCreatedAt\",\n            children: [\" (Created: \", createdAt, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"taskPriorityBox\",\n            children: [\" \", \"(Priority: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"priorityText\",\n              children: task.priority\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 32\n            }, this), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"iconsWrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            title: \"Completed / Not Completed\",\n            onClick: () => markDone(task.id),\n            \"aria-label\": `Mark ${task.status ? 'not completed' : 'completed'}: ${task.title}`,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCircleCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, this), !task.status && /*#__PURE__*/_jsxDEV(\"span\", {\n            title: \"Edit\",\n            onClick: () => handleEditClick(task),\n            \"aria-label\": `Edit task: ${task.title}`,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            title: \"Delete\",\n            onClick: () => deleteTask(task.id),\n            \"aria-label\": `Delete task: ${task.title}`,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTrashCan\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), editingTaskId === task.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editTaskDetails\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: editedDetails,\n            onChange: e => setEditedDetails(e.target.value),\n            rows: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSaveClick(task.id),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 19\n        }, this) : null]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No tasks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(ToDo, \"s/Tas7NgwMrSATlzBk5hVpvzlj0=\");\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faCircleCheck","faPen","faTrashCan","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDo","_ref","_s","toDo","markDone","setUpdateData","deleteTask","editingTaskId","setEditingTaskId","editedDetails","setEditedDetails","handleEditClick","task","id","details","handleSaveClick","taskId","console","log","children","length","sort","a","b","map","index","createdAt","Date","toLocaleString","className","status","fileName","_jsxFileName","lineNumber","columnNumber","style","cursor","title","priority","onClick","icon","value","onChange","e","target","rows","_c","$RefreshReg$"],"sources":["D:/Like, for real projects/React-Todo-List-V2/src/components/ToDo.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faCircleCheck, faPen, faTrashCan\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ToDo = ({ toDo, markDone, setUpdateData, deleteTask }) => {\r\n  const [editingTaskId, setEditingTaskId] = useState(null);\r\n  const [editedDetails, setEditedDetails] = useState('');\r\n\r\n  const handleEditClick = (task) => {\r\n    setEditingTaskId(task.id);\r\n    setEditedDetails(task.details);\r\n  };\r\n\r\n  const handleSaveClick = (taskId) => {\r\n    // Here you would typically call a function to save the updated details\r\n    // For example: updateTaskDetails(taskId, editedDetails);\r\n    console.log(`Updated task ${taskId}: ${editedDetails}`);\r\n    setEditingTaskId(null); // Close the edit mode\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {toDo && toDo.length > 0 ? (\r\n        toDo\r\n          .sort((a, b) => a.id - b.id) // Sort tasks by their IDs in ascending order\r\n          .map((task, index) => {\r\n            // Format the createdAt timestamp into a readable string\r\n            const createdAt = new Date(task.createdAt).toLocaleString();\r\n\r\n            return (\r\n              <div className=\"col taskBg\" key={task.id}>\r\n                <div className={task.status ? 'done' : ''}>\r\n                  <span className=\"taskNumber\">{index + 1}</span>\r\n                  <span className=\"taskText\" style={{ cursor: 'pointer' }}>\r\n                    {task.title}\r\n                    <span className=\"taskDetails\"> {/* Hoverable Details */}\r\n                      <strong>Details:</strong> {task.details}\r\n                    </span>\r\n                  </span>\r\n                  <span className=\"taskCreatedAt\"> (Created: {createdAt})</span>\r\n                  <span className=\"taskPriorityBox\"> {/* Boxed Priority */}\r\n                    (Priority: <span className=\"priorityText\">{task.priority}</span>)\r\n                  </span>\r\n                </div>\r\n                <div className=\"iconsWrap\">\r\n                  <span \r\n                    title=\"Completed / Not Completed\"\r\n                    onClick={() => markDone(task.id)}\r\n                    aria-label={`Mark ${task.status ? 'not completed' : 'completed'}: ${task.title}`}\r\n                  >\r\n                    <FontAwesomeIcon icon={faCircleCheck} />\r\n                  </span>\r\n\r\n                  {!task.status && (\r\n                    <span \r\n                      title=\"Edit\"\r\n                      onClick={() => handleEditClick(task)}\r\n                      aria-label={`Edit task: ${task.title}`}\r\n                    >\r\n                      <FontAwesomeIcon icon={faPen} />\r\n                    </span>\r\n                  )}\r\n\r\n                  <span \r\n                    title=\"Delete\"\r\n                    onClick={() => deleteTask(task.id)}\r\n                    aria-label={`Delete task: ${task.title}`}\r\n                  >\r\n                    <FontAwesomeIcon icon={faTrashCan} />\r\n                  </span>\r\n                </div>\r\n\r\n                {/* Inline editing for task details */}\r\n                {editingTaskId === task.id ? (\r\n                  <div className=\"editTaskDetails\">\r\n                    <textarea \r\n                      value={editedDetails}\r\n                      onChange={(e) => setEditedDetails(e.target.value)}\r\n                      rows=\"3\"\r\n                    />\r\n                    <button onClick={() => handleSaveClick(task.id)}>Save</button>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            );\r\n          })\r\n      ) : (\r\n        <div>No tasks available.</div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ToDo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}