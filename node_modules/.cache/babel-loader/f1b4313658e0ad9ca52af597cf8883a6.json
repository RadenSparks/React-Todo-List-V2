{"ast":null,"code":"var _jsxFileName = \"D:\\\\Like, for real projects\\\\React-Todo-List-V2\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport AddTaskForm from './components/AddTaskForm.jsx';\nimport UpdateForm from './components/UpdateForm.jsx';\nimport ToDo from './components/ToDo.jsx';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    const savedMode = localStorage.getItem('isDarkMode');\n    return savedMode === 'true';\n  });\n  const [toDo, setToDo] = useState(() => {\n    const savedTasks = JSON.parse(localStorage.getItem('toDoTasks'));\n    return savedTasks || [{\n      id: 1,\n      title: 'Task 1',\n      status: false,\n      createdAt: new Date().toLocaleString(),\n      priority: 'low',\n      details: ''\n    }, {\n      id: 2,\n      title: 'Task 2',\n      status: false,\n      createdAt: new Date().toLocaleString(),\n      priority: 'medium',\n      details: ''\n    }];\n  });\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState(null);\n  const addTask = (priority, details) => {\n    if (newTask.trim()) {\n      const newId = toDo.length ? Math.max(toDo.map(task => task.id)) + 1 : 1;\n      const updatedTasks = [...toDo, {\n        id: newId,\n        title: newTask,\n        status: false,\n        createdAt: new Date().toLocaleString(),\n        priority,\n        details\n      }];\n      setToDo(updatedTasks);\n      setNewTask('');\n    }\n  };\n  const deleteTask = id => {\n    if (window.confirm(\"Are you sure you want to delete this task?\")) {\n      const updatedTasks = toDo.filter(task => task.id !== id);\n      setToDo(updatedTasks);\n    }\n  };\n  const markDone = id => {\n    setToDo(toDo.map(task => task.id === id ? {\n      ...task,\n      status: !task.status\n    } : task));\n  };\n  const cancelUpdate = () => {\n    setUpdateData(null);\n  };\n  const handleUpdateChange = e => {\n    setUpdateData({\n      ...updateData,\n      title: e.target.value\n    });\n  };\n  const updateTask = (taskId, updatedData) => {\n    const updatedTasks = toDo.map(task => task.id === taskId ? {\n      ...task,\n      ...updatedData\n    } : task);\n    setToDo(updatedTasks);\n    setUpdateData(null);\n  };\n  const toggleTheme = () => {\n    const newMode = !isDarkMode;\n    setIsDarkMode(newMode);\n    localStorage.setItem('isDarkMode', newMode);\n  };\n  useEffect(() => {\n    localStorage.setItem('toDoTasks', JSON.stringify(toDo));\n  }, [toDo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `container App ${isDarkMode ? 'dark-mode' : 'light-mode'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To Do List App (ReactJS)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleTheme,\n      className: \"btn btn-secondary\",\n      \"aria-label\": `Switch to ${isDarkMode ? 'Light' : 'Dark'} Mode`,\n      children: [\"Toggle to \", isDarkMode ? 'Light' : 'Dark', \" Mode\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), updateData ? /*#__PURE__*/_jsxDEV(UpdateForm, {\n      updateData: updateData,\n      changeHolder: handleUpdateChange,\n      updateTask: updateTask,\n      cancelUpdate: cancelUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      newTask: newTask,\n      setNewTask: setNewTask,\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), toDo.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(ToDo, {\n      toDo: toDo,\n      markDone: markDone,\n      setUpdateData: setUpdateData,\n      deleteTask: deleteTask,\n      updateTask: updateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bnwbWDCB5bsPIR+KMD8pqkNYmlc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","AddTaskForm","UpdateForm","ToDo","React","jsxDEV","_jsxDEV","App","_s","isDarkMode","setIsDarkMode","savedMode","localStorage","getItem","toDo","setToDo","savedTasks","JSON","parse","id","title","status","createdAt","Date","toLocaleString","priority","details","newTask","setNewTask","updateData","setUpdateData","addTask","trim","newId","length","Math","max","map","task","updatedTasks","deleteTask","window","confirm","filter","markDone","cancelUpdate","handleUpdateChange","e","target","value","updateTask","taskId","updatedData","toggleTheme","newMode","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","changeHolder","_c","$RefreshReg$"],"sources":["D:/Like, for real projects/React-Todo-List-V2/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport AddTaskForm from './components/AddTaskForm.jsx';\r\nimport UpdateForm from './components/UpdateForm.jsx';\r\nimport ToDo from './components/ToDo.jsx';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport React from \"react\";\r\n\r\nfunction App() {\r\n  const [isDarkMode, setIsDarkMode] = useState(() => {\r\n    const savedMode = localStorage.getItem('isDarkMode');\r\n    return savedMode === 'true';\r\n  });\r\n\r\n  const [toDo, setToDo] = useState(() => {\r\n    const savedTasks = JSON.parse(localStorage.getItem('toDoTasks'));\r\n    return savedTasks || [\r\n      { id: 1, title: 'Task 1', status: false, createdAt: new Date().toLocaleString(), priority: 'low', details: '' },\r\n      { id: 2, title: 'Task 2', status: false, createdAt: new Date().toLocaleString(), priority: 'medium', details: '' }\r\n    ];\r\n  });\r\n\r\n  const [newTask, setNewTask] = useState('');\r\n  const [updateData, setUpdateData] = useState(null);\r\n\r\n  const addTask = (priority, details) => {\r\n    if (newTask.trim()) {\r\n      const newId = toDo.length ? Math.max(toDo.map(task => task.id)) + 1 : 1;\r\n\r\n      const updatedTasks = [\r\n        ...toDo,\r\n        { id: newId, title: newTask, status: false, createdAt: new Date().toLocaleString(), priority, details }\r\n      ];\r\n\r\n      setToDo(updatedTasks);\r\n      setNewTask('');\r\n    }\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this task?\")) {\r\n      const updatedTasks = toDo.filter(task => task.id !== id);\r\n      setToDo(updatedTasks);\r\n    }\r\n  };\r\n\r\n  const markDone = (id) => {\r\n    setToDo(toDo.map(task => \r\n      task.id === id ? { ...task, status: !task.status } : task\r\n    ));\r\n  };\r\n\r\n  const cancelUpdate = () => {\r\n    setUpdateData(null);\r\n  };\r\n\r\n  const handleUpdateChange = (e) => {\r\n    setUpdateData({ ...updateData, title: e.target.value });\r\n  };\r\n\r\n  const updateTask = (taskId, updatedData) => {\r\n    const updatedTasks = toDo.map(task => \r\n      task.id === taskId ? { ...task, ...updatedData } : task\r\n    );\r\n\r\n    setToDo(updatedTasks);\r\n    setUpdateData(null);\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    const newMode = !isDarkMode;\r\n    setIsDarkMode(newMode);\r\n    localStorage.setItem('isDarkMode', newMode);\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('toDoTasks', JSON.stringify(toDo));\r\n  }, [toDo]);\r\n\r\n  return (\r\n    <div className={`container App ${isDarkMode ? 'dark-mode' : 'light-mode'}`}>\r\n      <br /><br />\r\n      <h2>To Do List App (ReactJS)</h2>\r\n      <button onClick={toggleTheme} className=\"btn btn-secondary\" aria-label={`Switch to ${isDarkMode ? 'Light' : 'Dark'} Mode`}>\r\n        Toggle to {isDarkMode ? 'Light' : 'Dark'} Mode\r\n      </button>\r\n      <br /><br />\r\n\r\n      {updateData ? (\r\n        <UpdateForm\r\n          updateData={updateData}\r\n          changeHolder={handleUpdateChange}\r\n          updateTask={updateTask}\r\n          cancelUpdate={cancelUpdate}\r\n        />\r\n      ) : (\r\n        <AddTaskForm\r\n          newTask={newTask}\r\n          setNewTask={setNewTask}\r\n          addTask={addTask}\r\n        />\r\n      )}\r\n\r\n      {toDo.length === 0 && <p>No Tasks...</p>}\r\n\r\n      <ToDo\r\n        toDo={toDo}\r\n        markDone={markDone}\r\n        setUpdateData={setUpdateData}\r\n        deleteTask={deleteTask}\r\n        updateTask={updateTask}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}