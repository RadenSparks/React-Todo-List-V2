{"ast":null,"code":"var _jsxFileName = \"D:\\\\Like, for real projects\\\\React-Todo-List-V2\\\\src\\\\components\\\\ToDo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { Box, Button, TextField, Typography, Paper, IconButton } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDo = _ref => {\n  _s();\n  let {\n    toDo,\n    markDone,\n    deleteTask,\n    updateTask\n  } = _ref;\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [editedTitle, setEditedTitle] = useState('');\n  const [editedDetails, setEditedDetails] = useState('');\n  const handleEditTask = taskId => {\n    updateTask(taskId, {\n      title: editedTitle,\n      details: editedDetails\n    });\n    setEditingTaskId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 2\n    },\n    children: toDo && toDo.sort((a, b) => a.id > b.id ? 1 : -1).map((task, index) => {\n      const createdAt = new Date(task.createdAt).toLocaleString();\n      return /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          padding: 2,\n          marginBottom: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              flexGrow: 1\n            },\n            children: editingTaskId === task.id ? /*#__PURE__*/_jsxDEV(TextField, {\n              value: editedTitle,\n              onChange: e => setEditedTitle(e.target.value),\n              placeholder: \"Edit task title...\",\n              variant: \"outlined\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 21\n            }, this) : task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              marginLeft: 2\n            },\n            children: createdAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              marginLeft: 2,\n              color: task.priority === 'high' ? 'red' : 'green'\n            },\n            children: task.priority\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          marginTop: 1,\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => markDone(task.id),\n            title: \"Completed / Not Completed\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCircleCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => {\n              setEditingTaskId(task.id);\n              setEditedTitle(task.title);\n              setEditedDetails(task.details || '');\n            },\n            title: \"Edit\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => deleteTask(task.id),\n            title: \"Delete\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTrashCan\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          marginTop: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Details:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 45\n            }, this), \" \", task.details || 'No details provided.']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), editingTaskId === task.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              value: editedDetails,\n              onChange: e => setEditedDetails(e.target.value),\n              rows: 3,\n              placeholder: \"Edit task details...\",\n              variant: \"outlined\",\n              fullWidth: true,\n              multiline: true,\n              margin: \"normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleEditTask(task.id),\n                variant: \"contained\",\n                color: \"primary\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setEditingTaskId(null),\n                variant: \"outlined\",\n                color: \"secondary\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDo, \"ChqWsB6vIS0N0+X/S/nF+Yb0qUY=\");\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faCircleCheck","faPen","faTrashCan","Box","Button","TextField","Typography","Paper","IconButton","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDo","_ref","_s","toDo","markDone","deleteTask","updateTask","editingTaskId","setEditingTaskId","editedTitle","setEditedTitle","editedDetails","setEditedDetails","handleEditTask","taskId","title","details","sx","padding","children","sort","a","b","id","map","task","index","createdAt","Date","toLocaleString","marginBottom","display","alignItems","variant","flexGrow","value","onChange","e","target","placeholder","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","color","priority","justifyContent","marginTop","onClick","icon","rows","multiline","margin","_c","$RefreshReg$"],"sources":["D:/Like, for real projects/React-Todo-List-V2/src/components/ToDo.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Paper,\r\n  IconButton,\r\n} from '@mui/material';\r\n\r\nconst ToDo = ({ toDo, markDone, deleteTask, updateTask }) => {\r\n  const [editingTaskId, setEditingTaskId] = useState(null);\r\n  const [editedTitle, setEditedTitle] = useState('');\r\n  const [editedDetails, setEditedDetails] = useState('');\r\n\r\n  const handleEditTask = (taskId) => {\r\n    updateTask(taskId, { title: editedTitle, details: editedDetails });\r\n    setEditingTaskId(null);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ padding: 2 }}>\r\n      {toDo && toDo\r\n        .sort((a, b) => a.id > b.id ? 1 : -1)\r\n        .map((task, index) => {\r\n          const createdAt = new Date(task.createdAt).toLocaleString();\r\n\r\n          return (\r\n            <Paper key={task.id} sx={{ padding: 2, marginBottom: 2 }}>\r\n              <Box display=\"flex\" alignItems=\"center\">\r\n                <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\r\n                  {editingTaskId === task.id ? (\r\n                    <TextField\r\n                      value={editedTitle}\r\n                      onChange={(e) => setEditedTitle(e.target.value)}\r\n                      placeholder=\"Edit task title...\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                    />\r\n                  ) : (\r\n                    task.title\r\n                  )}\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ marginLeft: 2 }}>\r\n                  {createdAt}\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ marginLeft: 2, color: task.priority === 'high' ? 'red' : 'green' }}>\r\n                  {task.priority}\r\n                </Typography>\r\n              </Box>\r\n              <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" marginTop={1}>\r\n                <IconButton onClick={() => markDone(task.id)} title=\"Completed / Not Completed\">\r\n                  <FontAwesomeIcon icon={faCircleCheck} />\r\n                </IconButton>\r\n                <IconButton onClick={() => {\r\n                  setEditingTaskId(task.id);\r\n                  setEditedTitle(task.title);\r\n                  setEditedDetails(task.details || '');\r\n                }} title=\"Edit\">\r\n                  <FontAwesomeIcon icon={faPen} />\r\n                </IconButton>\r\n                <IconButton onClick={() => deleteTask(task.id)} title=\"Delete\">\r\n                  <FontAwesomeIcon icon={faTrashCan} />\r\n                </IconButton>\r\n              </Box>\r\n              <Box marginTop={2}>\r\n                <Typography variant=\"body1\"><strong>Details:</strong> {task.details || 'No details provided.'}</Typography>\r\n                {editingTaskId === task.id && (\r\n                  <>\r\n                    <TextField\r\n                      value={editedDetails}\r\n                      onChange={(e) => setEditedDetails(e.target.value)}\r\n                      rows={3}\r\n                      placeholder=\"Edit task details...\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      multiline\r\n                      margin=\"normal\"\r\n                    />\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Button\r\n                        onClick={() => handleEditTask(task.id)}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                      <Button\r\n                        onClick={() => setEditingTaskId(null)}\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </Box>\r\n            </Paper>\r\n          );\r\n        })\r\n      }\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ToDo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}